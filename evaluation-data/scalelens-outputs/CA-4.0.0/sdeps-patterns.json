[
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionTask.runMayThrow",
        "lineNumber": 191,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.CompactionMetadata$CompactionMetadataSerializer.serialize",
        "lineNumber": 85,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.process",
        "lineNumber": 777,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.RebufferingInputStream.read",
        "lineNumber": 84,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "node",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.run",
        "lineNumber": 71,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cache.CaffeineCache.remove",
        "lineNumber": 125,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTableRewriter$InvalidateKeys.run",
        "lineNumber": 282,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BasePartitions.hasNext",
        "lineNumber": 93,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaKeyspace.calculateSchemaDigest",
        "lineNumber": 364,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.BufferedDataOutputStreamPlus.writeBoolean",
        "lineNumber": 162,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTableRewriter.moveStarts",
        "lineNumber": 226,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Keyspaces.getNullable",
        "lineNumber": 89,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionTask.runMayThrow",
        "lineNumber": 197,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.serialize",
        "lineNumber": 108,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Keyspaces.containsKeyspace",
        "lineNumber": 94,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BasePartitions.hasNext",
        "lineNumber": 88,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.getApproximateKeyCount",
        "lineNumber": 271,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cache.CaffeineCache.put",
        "lineNumber": 110,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.CompactionMetadata$CompactionMetadataSerializer.deserialize",
        "lineNumber": 90,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaConstants.isLocalSystemKeyspace",
        "lineNumber": 81,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.serialize",
        "lineNumber": 131,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.runOnClose",
        "lineNumber": 87,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.serialize",
        "lineNumber": 123,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.storeKeyspaceInstance",
        "lineNumber": 225,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.AbstractCompactionStrategy$ScannerList.getTotalBytesScanned",
        "lineNumber": 331,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.serialize",
        "lineNumber": 124,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.CompactionMetadata$CompactionMetadataSerializer.serializedSize",
        "lineNumber": 79,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableReader.getPosition",
        "lineNumber": 215,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MergeIterator.close",
        "lineNumber": 55,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.getNonLocalStrategyKeyspaces",
        "lineNumber": 316,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.lambda$getBackgroundCompactionTaskSubmitter$0",
        "lineNumber": 294,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token"
            ],
            "bursty": [
                "Burst(node)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.UnfilteredPartitionIterators$Serializer.serialize",
        "lineNumber": 303,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Keyspaces.filter",
        "lineNumber": 111,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Envelope.release",
        "lineNumber": 73,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.updateScores",
        "lineNumber": 290,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.selfAssign",
        "lineNumber": 212,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)",
                "log(table)"
            ],
            "super-linear": [
                "keyspace^3",
                "table^3"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.RowIterators.digest",
        "lineNumber": 49,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0954keyspace"
            ],
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTableRewriter.append",
        "lineNumber": 130,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(table * row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getLocalPrimaryRangeForEndpoint",
        "lineNumber": 4208,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "node"
            ],
            "super-linear": [
                "token^2",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getPrimaryRangesForEndpoint",
        "lineNumber": 4147,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "node"
            ],
            "super-linear": [
                "token^2",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.getKeyspaceInstance",
        "lineNumber": 197,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "token",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.CassandraDaemon.lambda$static$1",
        "lineNumber": 194,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.FastByteOperations$UnsafeOperations.copy",
        "lineNumber": 292,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir$EstimatedHistogramReservoirSnapshot.getValue",
        "lineNumber": 491,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MergeIterator$ManyToOne.replaceAndSink",
        "lineNumber": 261,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BasePartitions.hasNext",
        "lineNumber": 96,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "large-linear": [
                "396keyspace",
                "553keyspace",
                "577keyspace"
            ],
            "super-linear": [
                "table * row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAckVerbHandler.doVerb",
        "lineNumber": 85,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicationStrategy.getAddressReplicas",
        "lineNumber": 226,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "super-linear": [
                "node * token",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.updateHostId",
        "lineNumber": 269,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.getPrimaryRangesFor",
        "lineNumber": 755,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "super-linear": [
                "node * token",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.cloneOnlyTokenMap",
        "lineNumber": 649,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.ArrivalWindow.add",
        "lineNumber": 478,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.EndpointMessagingVersions.set",
        "lineNumber": 47,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSerializationHelper.deserialize",
        "lineNumber": 67,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSerializationHelper.serialize",
        "lineNumber": 59,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ],
            "super-linear": [
                "datacenter^3"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.RangesByEndpoint$Builder.build",
        "lineNumber": 53,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAckSerializer.serializedSize",
        "lineNumber": 94,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.examineShadowState",
        "lineNumber": 1587,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.SortedBiMultiValMap.create",
        "lineNumber": 45,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.applyStateLocally",
        "lineNumber": 1441,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicationStrategy.getAddressReplicas",
        "lineNumber": 243,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "super-linear": [
                "node * token",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSerializationHelper.serializedSize",
        "lineNumber": 75,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAck2Serializer.serializedSize",
        "lineNumber": 83,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getAllRanges",
        "lineNumber": 4235,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "super-linear": [
                "node * token",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.applyNewStates",
        "lineNumber": 1506,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAckSerializer.serialize",
        "lineNumber": 67,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAck2Serializer.serialize",
        "lineNumber": 58,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicationStrategy.getAddressReplicas",
        "lineNumber": 229,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "super-linear": [
                "node * token",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getLocalPrimaryRangeForEndpoint",
        "lineNumber": 4217,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "super-linear": [
                "token^2",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAckSerializer.deserialize",
        "lineNumber": 81,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAck2Serializer.deserialize",
        "lineNumber": 71,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.notifyFailureDetector",
        "lineNumber": 1194,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.applyNewStates",
        "lineNumber": 1502,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.makeRandomGossipDigest",
        "lineNumber": 676,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.getGossipStatus",
        "lineNumber": 1410,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.sendGossip",
        "lineNumber": 837,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.getMaxEndpointStateVersion",
        "lineNumber": 560,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.EndpointStateSerializer.serialize",
        "lineNumber": 266,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.EndpointStateSerializer.serializedSize",
        "lineNumber": 295,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.streaming.StreamManager$3.run",
        "lineNumber": 146,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "supra-linear": [
                "log(node * token)",
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.streaming.StreamManager.registerFollower",
        "lineNumber": 150,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "linear": [
                "token",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.EndpointMessagingVersions.get",
        "lineNumber": 63,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(node, token)",
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringComparator.compare",
        "lineNumber": 136,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(node, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir.rescale",
        "lineNumber": 373,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(node, token)",
                "Burst(datacenter, token)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.lambda$getBackgroundCompactionTaskSubmitter$0",
        "lineNumber": 295,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "linear": [
                "keyspace",
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.getStateForVersionBiggerThan",
        "lineNumber": 1168,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.SimpleStrategy.calculateNaturalReplicas",
        "lineNumber": 71,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "token^2",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicaCollection$ReplicaMap.get",
        "lineNumber": 325,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "token^2",
                "datacenter * token"
            ],
            "linear": [
                "token"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.getStateForVersionBiggerThan",
        "lineNumber": 1159,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicaCollection$ReplicaMap.internalPutIfAbsent",
        "lineNumber": 311,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "token^2",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicaCollection$ReplicaMap.internalPutIfAbsent",
        "lineNumber": 308,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "datacenter^3",
                "datacenter^2"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "quasi-linear": [
                "node * token * log(node * token)"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.ExecutorLocals.set",
        "lineNumber": 79,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "node * token",
                "datacenter^3"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "datacenter",
                "table",
                "row"
            ],
            "supra-linear": [
                "0.0375table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.FastByteOperations$UnsafeOperations.compareTo",
        "lineNumber": 400,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "token^2",
                "datacenter * token"
            ],
            "linear": [
                "datacenter",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SystemKeyspace.updateTableEstimates",
        "lineNumber": 1325,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "row",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SystemKeyspace.updateSizeEstimates",
        "lineNumber": 1299,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.computeSizeEstimates",
        "lineNumber": 121,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getNextBackgroundTask",
        "lineNumber": 216,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(table * row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getNextBackgroundTask",
        "lineNumber": 210,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(table * row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.computeSizeEstimates",
        "lineNumber": 123,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "row",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.computeSizeEstimates",
        "lineNumber": 131,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "row",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.lambda$waitForFlushes$1",
        "lineNumber": 933,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager$BackgroundCompactionCandidate.run",
        "lineNumber": 304,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableWriter.beforeAppend",
        "lineNumber": 170,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.getNumberOfTables",
        "lineNumber": 268,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.lambda$getNumberOfTables$13",
        "lineNumber": 268,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.streamhist.StreamingTombstoneHistogramBuilder.update",
        "lineNumber": 102,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.KeyspaceMetadata.tablesAndViews",
        "lineNumber": 144,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.takeSnapshot",
        "lineNumber": 3789,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2060,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnIndex.buildRowIndex",
        "lineNumber": 117,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.run",
        "lineNumber": 104,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.RestorableMeter.tickIfNecessary",
        "lineNumber": 87,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "table"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.streamhist.StreamingTombstoneHistogramBuilder$DataHolder.addValue",
        "lineNumber": 214,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2054,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2062,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager.submitBackground",
        "lineNumber": 201,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Memtable$FlushRunnable.createFlushWriter",
        "lineNumber": 518,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.snapshotExists",
        "lineNumber": 307,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.QueryProcessor.makeInternalOptions",
        "lineNumber": 296,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter",
                "table"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.run",
        "lineNumber": 90,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.takeSnapshot",
        "lineNumber": 3796,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2068,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.AbstractBTreePartition.sliceIterator",
        "lineNumber": 197,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Memtable$FlushRunnable.writeSortedContents",
        "lineNumber": 475,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$GlobalTidy$1.run",
        "lineNumber": 2143,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2070,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.streamhist.StreamingTombstoneHistogramBuilder$DataHolder.forEach",
        "lineNumber": 334,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.snapshot",
        "lineNumber": 253,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.CBUtil.writeValue",
        "lineNumber": 459,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2066,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.FastByteOperations$UnsafeOperations.compareTo",
        "lineNumber": 386,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "super-linear": [
                "node^2"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.createTable",
        "lineNumber": 765,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.lambda$reload$5",
        "lineNumber": 156,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)",
                "log(row)",
                "log(table * row)"
            ],
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.getTableMetadataRef",
        "lineNumber": 388,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MurmurHash.hash3_x64_128",
        "lineNumber": 191,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.processPartition",
        "lineNumber": 840,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0534keyspace",
                "0.0527keyspace",
                "0.0530table",
                "0.0527table"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.CBUtil.writeValue",
        "lineNumber": 467,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0534keyspace",
                "0.0527keyspace",
                "0.0530table",
                "0.0517table",
                "0.0527table"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.snapshotWithoutFlush",
        "lineNumber": 1846,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0486keyspace"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet$Codec.encodedSize",
        "lineNumber": 182,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0534keyspace",
                "0.0527keyspace",
                "0.0530table",
                "0.0527table"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet$Codec.encode",
        "lineNumber": 168,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0534keyspace",
                "0.0527keyspace",
                "0.0530table",
                "0.0527table"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.CBUtil.writeValue",
        "lineNumber": 464,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0534keyspace",
                "0.0527keyspace",
                "0.0530table",
                "0.0538table",
                "0.0527table"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.processPartition",
        "lineNumber": 845,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0534keyspace",
                "0.0527keyspace",
                "0.0530table",
                "0.0527table"
            ],
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet$Codec.encode",
        "lineNumber": 172,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0534keyspace",
                "0.0527keyspace",
                "0.0530table",
                "0.0527table"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet$Codec.encodedSize",
        "lineNumber": 180,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0534keyspace",
                "0.0527keyspace",
                "0.0530table",
                "0.0527table"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir.bucketValue",
        "lineNumber": 333,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.WaitQueue.signalAll",
        "lineNumber": 138,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.run",
        "lineNumber": 104,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPExecutor.takeTaskPermit",
        "lineNumber": 152,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir$EstimatedHistogramReservoirSnapshot.count",
        "lineNumber": 545,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Flusher.poll",
        "lineNumber": 136,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.AbstractArrayClusteringPrefix.getBufferArray",
        "lineNumber": 44,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.firstKeyBeyond",
        "lineNumber": 1435,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getKeyspaces",
        "lineNumber": 5242,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.updateScores",
        "lineNumber": 303,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.updateScores",
        "lineNumber": 296,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.commitlog.CommitLogSegment.coverInMap",
        "lineNumber": 547,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.updateScores",
        "lineNumber": 288,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.commitlog.AbstractCommitLogService$SyncRunnable.sync",
        "lineNumber": 187,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(node)",
                "log(datacenter)",
                "log(table)"
            ],
            "linear": [
                "datacenter",
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.commitlog.AbstractCommitLogService$SyncRunnable.sync",
        "lineNumber": 171,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(node)",
                "log(datacenter)",
                "log(table)"
            ],
            "linear": [
                "datacenter",
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPExecutor.takeWorkPermit",
        "lineNumber": 170,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.TokenSerializer.deserialize",
        "lineNumber": 54,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.addBootstrapTokens",
        "lineNumber": 350,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.SetSerializer.deserializeForNativeProtocol",
        "lineNumber": 112,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.dataSize",
        "lineNumber": 119,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.updateTokenMetadata",
        "lineNumber": 2675,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serializedSize",
        "lineNumber": 284,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.updateNormalTokens",
        "lineNumber": 219,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serializedSize",
        "lineNumber": 280,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cells.reconcile",
        "lineNumber": 80,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.CellPath.dataSize",
        "lineNumber": 52,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.CollectionSerializer.pack",
        "lineNumber": 82,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.CollectionSerializer.pack",
        "lineNumber": 77,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.updateTokenMetadata",
        "lineNumber": 2681,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.updateNormalTokens",
        "lineNumber": 185,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.writeComplexColumn",
        "lineNumber": 274,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 219,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token",
                "row",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.sizeOfComplexColumn",
        "lineNumber": 376,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.addBootstrapTokens",
        "lineNumber": 344,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.streaming.StreamManager.getReceivingStream",
        "lineNumber": 156,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serializedSize",
        "lineNumber": 283,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.resolve",
        "lineNumber": 1201,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow$Builder$CellResolver.resolve",
        "lineNumber": 704,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 204,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.SetSerializer.serializeValues",
        "lineNumber": 61,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 200,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cells.reconcileComplex",
        "lineNumber": 251,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 203,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.BiMultiValMap.removeValue",
        "lineNumber": 127,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cells.reconcile",
        "lineNumber": 84,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.addBootstrapTokens",
        "lineNumber": 357,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.unsharedHeapSizeExcludingData",
        "lineNumber": 128,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cells.reconcile",
        "lineNumber": 81,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Sets$Value.fromSerialized",
        "lineNumber": 219,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 315,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 265,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ],
            "super-linear": [
                "datacenter * token^2"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.SetSerializer.serializeValues",
        "lineNumber": 63,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SystemKeyspace.tokensAsSet",
        "lineNumber": 783,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.sort",
        "lineNumber": 1170,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.calculatePendingRanges",
        "lineNumber": 941,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow$Builder.addCell",
        "lineNumber": 812,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow$Builder$CellResolver.resolve",
        "lineNumber": 685,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.TypeSizes.encodedUTF8Length",
        "lineNumber": 51,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "super-linear": [
                "node * token"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 322,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 268,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "token^2"
            ],
            "linear": [
                "token"
            ],
            "supra-linear": [
                "log(datacenter)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.buildFromRange",
        "lineNumber": 400,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node * token)",
                "log(row)"
            ],
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.LatencyMetrics.addNano",
        "lineNumber": 156,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)"
            ],
            "supra-linear": [
                "log(datacenter)"
            ],
            "super-linear": [
                "datacenter^3"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.vint.VIntCoding.encodeUnsignedVInt",
        "lineNumber": 227,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)"
            ],
            "supra-linear": [
                "log(datacenter)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.StreamingMetrics.get",
        "lineNumber": 69,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Rows.copy",
        "lineNumber": 45,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.accumulate",
        "lineNumber": 1416,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.StreamingMetrics.get",
        "lineNumber": 60,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.StreamingMetrics.get",
        "lineNumber": 65,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.update",
        "lineNumber": 150,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.buildInternal",
        "lineNumber": 206,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(token)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.buildInternal",
        "lineNumber": 207,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(token)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$LocalPool.get",
        "lineNumber": 852,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.OpOrder$Group.unlink",
        "lineNumber": 303,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "linear": [
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.OpOrder$Group.unlink",
        "lineNumber": 288,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "linear": [
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.MetadataCollector.makeList",
        "lineNumber": 296,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.GCInspector.handleNotification",
        "lineNumber": 274,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.Refs.tryRef",
        "lineNumber": 210,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getHolder",
        "lineNumber": 627,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.scheduleFlush",
        "lineNumber": 287,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.View.select",
        "lineNumber": 146,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.ActiveCompactions.finishCompaction",
        "lineNumber": 49,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionController.getPurgeEvaluator",
        "lineNumber": 268,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionIterator$GarbageSkipper.applyToPartition",
        "lineNumber": 540,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.autoEnforce",
        "lineNumber": 1182,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.hasNext",
        "lineNumber": 128,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnections$UnusedConnectionMonitor.closeUnusedSinceLastRun",
        "lineNumber": 277,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.View$3.apply",
        "lineNumber": 268,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.Refs.release",
        "lineNumber": 237,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.orIn",
        "lineNumber": 205,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RegularAndStaticColumns$Builder.addAll",
        "lineNumber": 186,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.replace",
        "lineNumber": 62,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.identityMap",
        "lineNumber": 173,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MonotonicClock$AbstractEpochSamplingClock.updateAlmostSameTime",
        "lineNumber": 208,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.isShutdown",
        "lineNumber": 474,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.MessagingMetrics.resetAndConsumeDroppedErrors",
        "lineNumber": 197,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.addLocalApplicationStates",
        "lineNumber": 1963,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper$GossipTask.run",
        "lineNumber": 287,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.security.SSLFactory.checkCertFilesForHotReloading",
        "lineNumber": 354,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager.setRate",
        "lineNumber": 243,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.evictFromMembership",
        "lineNumber": 579,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.SimpleStrategy.calculateNaturalReplicas",
        "lineNumber": 73,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.removeEndpoint",
        "lineNumber": 590,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.getTableMetadata",
        "lineNumber": 417,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MonotonicClock$AbstractEpochSamplingClock.updateAlmostSameTime",
        "lineNumber": 216,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.markDead",
        "lineNumber": 1287,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.Ref$GlobalState.release",
        "lineNumber": 318,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.ManyToOneConcurrentLinkedQueue.internalOffer",
        "lineNumber": 203,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.AbstractCompactionStrategy.filterSuspectSSTables",
        "lineNumber": 220,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.hasNext",
        "lineNumber": 140,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.MessagingMetrics.recordInternalLatency",
        "lineNumber": 125,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.lambda$convict$1",
        "lineNumber": 518,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.PendingRangeCalculatorService$PendingRangeTask.run",
        "lineNumber": 76,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 287,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.getTableMetadata",
        "lineNumber": 415,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.getQuery",
        "lineNumber": 277,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnection$EventLoopDelivery.doRun",
        "lineNumber": 812,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnection$EventLoopDelivery.doRun",
        "lineNumber": 783,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.PrunableArrayQueue.prune",
        "lineNumber": 114,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 291,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter * token^2"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.isRowCacheEnabled",
        "lineNumber": 2687,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnections$UnusedConnectionMonitor.closeUnusedSinceLastRun",
        "lineNumber": 279,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.EndpointMessagingVersions.reset",
        "lineNumber": 54,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Tables.filter",
        "lineNumber": 139,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.skipNext",
        "lineNumber": 632,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.TableMetadata.compareColumns",
        "lineNumber": 651,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.compareNextTo",
        "lineNumber": 558,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.prepare",
        "lineNumber": 539,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Tables.getNullable",
        "lineNumber": 128,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "supra-linear": [
                "log(table * row)",
                "log(table)",
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.prepare",
        "lineNumber": 541,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.prepare",
        "lineNumber": 540,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.skipNext",
        "lineNumber": 628,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Tables.containsTable",
        "lineNumber": 133,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "supra-linear": [
                "log(table)",
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.EstimatedHistogram.percentile",
        "lineNumber": 219,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0290table",
                "log(table * row)",
                "log(table)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.EncodingStats$Collector.get",
        "lineNumber": 248,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicaCollection.filter",
        "lineNumber": 454,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.applyInternal",
        "lineNumber": 658,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.applyInternal",
        "lineNumber": 536,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.addUpdates",
        "lineNumber": 737,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager.store",
        "lineNumber": 146,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.mutateAtomically",
        "lineNumber": 1113,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SimpleBuilders$RowBuilder.add",
        "lineNumber": 393,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.getMutations",
        "lineNumber": 287,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.messages.BatchMessage.execute",
        "lineNumber": 208,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.AbstractWriteResponseHandler.signal",
        "lineNumber": 246,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.messages.BatchMessage$1.decode",
        "lineNumber": 59,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 232,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.authorize",
        "lineNumber": 166,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.validate",
        "lineNumber": 257,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.applyInternal",
        "lineNumber": 659,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.LeafBTreeSearchIterator.rewind",
        "lineNumber": 53,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.getMutations",
        "lineNumber": 286,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PartitionUpdate.dataSize",
        "lineNumber": 338,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SingleTableUpdatesCollector.toMutations",
        "lineNumber": 96,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.messages.BatchMessage.execute",
        "lineNumber": 191,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.validate",
        "lineNumber": 269,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serializedSize",
        "lineNumber": 297,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.buildPartitionKeyNames",
        "lineNumber": 332,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.messages.BatchMessage.execute",
        "lineNumber": 174,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.buildInternal",
        "lineNumber": 221,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.validate",
        "lineNumber": 192,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ConsistencyLevel.blockForWrite",
        "lineNumber": 169,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.applyInternal",
        "lineNumber": 538,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.validate",
        "lineNumber": 265,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.triggers.TriggerExecutor.execute",
        "lineNumber": 118,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Rows.copy",
        "lineNumber": 55,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicaCollection.filter",
        "lineNumber": 452,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.TimeUUIDType.compareCustom",
        "lineNumber": 66,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.TimeUUIDType.compareCustom",
        "lineNumber": 49,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicationStrategy.getCachedReplicas",
        "lineNumber": 92,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.authorize",
        "lineNumber": 249,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.validate",
        "lineNumber": 266,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.UUIDGen.createTimeUUIDBytes",
        "lineNumber": 284,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.run",
        "lineNumber": 128,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow.minDeletionTime",
        "lineNumber": 183,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.Replicas.temporaryAssertFull",
        "lineNumber": 135,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.getMutations",
        "lineNumber": 278,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.sendToHintedReplicas",
        "lineNumber": 1379,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.getMutations",
        "lineNumber": 297,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.TreeBuilder.update",
        "lineNumber": 105,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.sendToHintedReplicas",
        "lineNumber": 1442,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.applyInternal",
        "lineNumber": 670,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.LeafBTreeSearchIterator.next",
        "lineNumber": 62,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.syncWriteBatchedMutations",
        "lineNumber": 1249,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.UUIDGen.createTimeUUIDBytes",
        "lineNumber": 287,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PartitionUpdate.dataSize",
        "lineNumber": 335,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.TimeUUIDType.compareCustom",
        "lineNumber": 64,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.EncodingStats$Collector.get",
        "lineNumber": 247,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.TreeBuilder.newInstance",
        "lineNumber": 46,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.validate",
        "lineNumber": 267,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.syncWriteBatchedMutations",
        "lineNumber": 1242,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$MutationSerializer.serialize",
        "lineNumber": 382,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.updateCoordinatorWriteLatencyTableMetric",
        "lineNumber": 1175,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.firstTokenIndex",
        "lineNumber": 1133,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.messages.BatchMessage.execute",
        "lineNumber": 203,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.lambda$filter$0",
        "lineNumber": 177,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.lambda$filter$0",
        "lineNumber": 178,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.lambda$filter$0",
        "lineNumber": 174,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.ReplicaPlans.assureSufficientLiveReplicas",
        "lineNumber": 164,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.lambda$filter$0",
        "lineNumber": 176,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicaCollection.filter",
        "lineNumber": 424,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cache.InstrumentingCache.get",
        "lineNumber": 63,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cache.InstrumentingCache.get",
        "lineNumber": 61,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cache.InstrumentingCache.get",
        "lineNumber": 58,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPExecutor.takeTaskPermit",
        "lineNumber": 157,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)",
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.reads.range.RangeCommandIterator.close",
        "lineNumber": 264,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.readRegular",
        "lineNumber": 1861,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.snapshotWithoutFlush",
        "lineNumber": 1842,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.forceFlush",
        "lineNumber": 899,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Directories.snapshotExists",
        "lineNumber": 1001,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.hasNext",
        "lineNumber": 133,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnIndex.add",
        "lineNumber": 259,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.hasNext",
        "lineNumber": 152,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.hasNext",
        "lineNumber": 147,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnIndex.add",
        "lineNumber": 253,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionTask.runMayThrow",
        "lineNumber": 144,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionTask.runMayThrow",
        "lineNumber": 240,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.getValidColumnFamilies",
        "lineNumber": 705,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.forceKeyspaceCompaction",
        "lineNumber": 3648,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.lambda$reload$8",
        "lineNumber": 164,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTrees$MerkleTreesSerializer.deserialize",
        "lineNumber": 414,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.SystemDistributedKeyspace.startRepairs",
        "lineNumber": 236,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.ValidationTask.treesReceived",
        "lineNumber": 73,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.readComplexColumn",
        "lineNumber": 666,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Sets$DelayedValue.bind",
        "lineNumber": 275,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.repair.PendingAntiCompaction.run",
        "lineNumber": 365,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.Validator.run",
        "lineNumber": 253,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.ColumnMetadata.comparisonOrder",
        "lineNumber": 102,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PartitionUpdate$PartitionUpdateSerializer.deserialize",
        "lineNumber": 652,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.ActiveRepairService.prepareForRepair",
        "lineNumber": 568,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairSession.start",
        "lineNumber": 303,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.transformAndFilter",
        "lineNumber": 816,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.CompactionMetrics$1.getValue",
        "lineNumber": 77,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.RepairedState.add",
        "lineNumber": 252,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cells.reconcileComplex",
        "lineNumber": 253,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.ActiveRepairService$ParentRepairSession.getColumnFamilyStores",
        "lineNumber": 775,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.getRepairedState",
        "lineNumber": 204,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 245,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairSession.start",
        "lineNumber": 295,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.ValidationManager.doValidation",
        "lineNumber": 119,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 243,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.ActiveRepairService.removeParentRepairSession",
        "lineNumber": 702,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 242,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.RepairedState.add",
        "lineNumber": 250,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 216,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Sets$Literal.prepare",
        "lineNumber": 147,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 240,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.putSession",
        "lineNumber": 634,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getEstimatedRemainingTasks",
        "lineNumber": 983,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.add",
        "lineNumber": 1004,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.repair.PendingAntiCompaction.run",
        "lineNumber": 372,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 241,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.repair.PendingAntiCompaction$AcquisitionCallback.apply",
        "lineNumber": 313,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.repair.PendingAntiCompaction$AcquisitionCallback.apply",
        "lineNumber": 292,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.putSession",
        "lineNumber": 632,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairRunnable.runMayThrow",
        "lineNumber": 259,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.Batch$Serializer.readEncodedMutations",
        "lineNumber": 156,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.assign",
        "lineNumber": 177,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Sets$Literal.validateAssignableTo",
        "lineNumber": 178,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.transformAndFilter",
        "lineNumber": 818,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairSession.validationComplete",
        "lineNumber": 201,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.TableMetrics$TableTimer$Context.close",
        "lineNumber": 1271,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.Validator.add",
        "lineNumber": 182,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairJob.access$600",
        "lineNumber": 52,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaKeyspace.createTableParamsFromRow",
        "lineNumber": 985,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.messages.PrepareMessage$1.serialize",
        "lineNumber": 96,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 239,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.tableIdToUuid",
        "lineNumber": 149,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.SystemDistributedKeyspace.startRepairs",
        "lineNumber": 238,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 254,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.SystemDistributedKeyspace.startParentRepair",
        "lineNumber": 170,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.sessionCompleted",
        "lineNumber": 898,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.maybeUpdateRepairedState",
        "lineNumber": 223,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.getRepairedState",
        "lineNumber": 206,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.setLiteral",
        "lineNumber": 12563,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.assign",
        "lineNumber": 190,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.TableMetadata$Builder.build",
        "lineNumber": 744,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.CompactionParams.equals",
        "lineNumber": 338,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.messages.PrepareMessage$1.serializedSize",
        "lineNumber": 135,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaKeyspace.fetchTables",
        "lineNumber": 916,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.ActiveRepairService$ParentRepairSession.getTableIds",
        "lineNumber": 785,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.CQLTypeParser.parse",
        "lineNumber": 45,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairJobDesc$RepairJobDescSerializer.deserialize",
        "lineNumber": 129,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.cleanup",
        "lineNumber": 425,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.SetType.getInstance",
        "lineNumber": 55,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.Validator.add",
        "lineNumber": 180,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Row$Merger$ColumnDataReducer.getReduced",
        "lineNumber": 832,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.setLiteral",
        "lineNumber": 12557,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.Memory.checkBounds",
        "lineNumber": 344,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.transformAndFilter",
        "lineNumber": 813,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTrees.tryMoveOffHeap",
        "lineNumber": 376,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.Verb.fromId",
        "lineNumber": 426,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.UUIDType.compareCustom",
        "lineNumber": 63,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.Message$Serializer.extractParams",
        "lineNumber": 1179,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir.findIndex",
        "lineNumber": 271,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$MutationSerializer.deserialize",
        "lineNumber": 391,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.Message$Serializer.inferMessageSize",
        "lineNumber": 648,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ColumnIdentifier.prefixComparison",
        "lineNumber": 95,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPExecutor.addTask",
        "lineNumber": 105,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairRunnable.complete",
        "lineNumber": 234,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.FrameDecoder.deliver",
        "lineNumber": 318,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.Crc.crc24",
        "lineNumber": 122,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.Crc.crc24",
        "lineNumber": 127,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.FrameDecoderWith8bHeader.decode",
        "lineNumber": 111,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.FrameDecoderCrc.unpackFrame",
        "lineNumber": 140,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairRunnable.prepare",
        "lineNumber": 395,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTree$OnHeapInner.serializeOffHeap",
        "lineNumber": 1332,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.Murmur3Partitioner.midpoint",
        "lineNumber": 99,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.executeInternalWithoutCondition",
        "lineNumber": 632,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.getRepairedState",
        "lineNumber": 210,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.getRepairedState",
        "lineNumber": 197,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.ActiveRepairService.recordRepairStatus",
        "lineNumber": 412,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTree.histogramOfRowSizePerLeaf",
        "lineNumber": 467,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTree.histogramOfRowCountPerLeaf",
        "lineNumber": 477,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTree$OffHeapInner.deserializeWithoutIdent",
        "lineNumber": 1433,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.EstimatedHistogram.log",
        "lineNumber": 318,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.EstimatedHistogram.log",
        "lineNumber": 326,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnection$Delivery.run",
        "lineNumber": 674,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.vint.VIntCoding.getUnsignedVInt",
        "lineNumber": 122,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Columns$Serializer.deserializeSubset",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.RebufferingInputStream.skipBytes",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "row"
            ],
            "super-linear": [
                "node^2",
                "datacenter * token"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(datacenter)"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MergeIterator$Candidate.compareTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.PartitionRangeReadCommand.queryStorage",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIterators$UnfilteredRowMergeIterator.mergeStaticRows",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnIndex.buildRowIndex",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionIterator$1.getRowMergeListener",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTableRewriter.append",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIterators$UnfilteredRowMergeIterator.collectPartitionLevelDeletion",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.SortedBiMultiValMap.create",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(node)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableScanner$KeyScanningIterator.computeNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "datacenter^2",
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.deserializeHeader",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(table * row)",
                "0.0639table",
                "log(table)"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.UnfilteredPartitionIterators$1.getReduced",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getAllRanges",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MurmurHash.hash2_64",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.UnfilteredPartitionIterators$Serializer$1.hasNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(table * row)",
                "0.0858table"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIterators$UnfilteredRowMergeIterator.checkForInvalidInput",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MergeIterator.close",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "table",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.MetadataCollector.updateClusteringValues",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "super-linear": [
                "keyspace^2"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.AbstractCompactionStrategy$ScannerList.getTotalBytesScanned",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.CompressedChunkReader$Mmap.readChunk",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter",
                "table"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table, row)"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableScanner$KeyScanningIterator$1.initializeIterator",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.EncodingStats.merge",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Slices$Builder.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnIndex.finish",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Columns.digest",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.Message.buildParams",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "node * log(node)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "node^2",
                "datacenter^2",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Serializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableWriter.afterAppend",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "row"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager.compactionRateLimiterAcquire",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.ExecutorLocals.set",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "table",
                "row"
            ],
            "super-linear": [
                "node^2",
                "node * token",
                "datacenter^3"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RowIndexEntry.create",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "row"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getPrimaryRangesForEndpoint",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.filter.ClusteringIndexNamesFilter.getSlices",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Slices$Builder.build",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(datacenter * token)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.BloomFilter.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableWriter.beforeAppend",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "row"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnIndex.addIndexBlock",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTableRewriter.maybeReopenEarly",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnIndex.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "row"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "supra-linear": [
                "0.0333keyspace"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.UnfilteredPartitionIterators$1.onKeyChange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIterators$UnfilteredRowMergeIterator.collectColumns",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIterators$UnfilteredRowMergeIterator$MergeReducer.getReduced",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.reads.range.RangeCommandIterator.computeNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.getTokens",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Digest.update",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIterators.merge",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.IndexInfo$Serializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionIterator$GarbageSkipper.applyToPartition",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseIterator.tryGetMoreContents",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.filter.DataLimits$Counter.attachTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter",
                "table"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "super-linear": [
                "keyspace^2"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.processPartition",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(table * row)",
                "log(table)",
                "0.0951table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.KeyspaceMetadata$KeyspaceDiff.diff",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.RowIterators.digest",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.writers.CompactionAwareWriter.maybeSwitchWriter",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getLocalPrimaryRangeForEndpoint",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.TypeSizes.encodedUTF8Length",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token"
            ],
            "super-linear": [
                "node^2",
                "datacenter^2",
                "table^2"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.hasNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)",
                "log(table * row)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "linear": [
                "datacenter",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPExecutor.takeTaskPermit",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "0.0591keyspace"
            ],
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.IntervalTree$IntervalNode.searchInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.EncodingStats$Collector.get",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "token",
                "row"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Row$Merger.merge",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "keyspace",
                "row"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.UnfilteredPartitionIterators.mergeLazily",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "token"
            ],
            "supra-linear": [
                "log(table)",
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicaCollection.subList",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "node",
                "row"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ],
            "super-linear": [
                "datacenter^2",
                "table^2"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPExecutor.takeWorkPermit",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "super-linear": [
                "table * row",
                "table^3"
            ],
            "quasi-linear": [
                "table * row * log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.autoEnforce",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "keyspace^2"
            ],
            "linear": [
                "token",
                "row"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Envelope$Header$Flag.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table, row)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.accumulate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "quasi-linear": [
                "node * token * log(node * token)",
                "datacenter * token * log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "datacenter * token"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "row",
                "table"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.applyInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "token",
                "table"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.apply",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "token",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$MutationSerializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "token",
                "table"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.deserializeOne",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.ShareableBytes.doRetain",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(node)",
                "log(keyspace)"
            ],
            "linear": [
                "datacenter"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.vint.VIntCoding.encodeUnsignedVInt",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "node * log(node)",
                "table * log(table)"
            ],
            "super-linear": [
                "keyspace^2",
                "node^2",
                "datacenter * token",
                "table^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.resolve",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node)",
                "Burst(table)"
            ],
            "linear": [
                "keyspace",
                "token",
                "row"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.PartitionKeySingleRestrictionSet.toByteBuffers",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table, row)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$Chunk.freeUnusedPortion",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)",
                "log(table * row)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Lexer.mLETTER",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table, row)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "keyspace^2"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BasePartitions.runOnClose",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MurmurHash.hash3_x64_128",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node, token)"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$Chunk.get",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(node)",
                "log(keyspace)",
                "log(table * row)",
                "log(table)"
            ],
            "linear": [
                "token",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.ColumnMetadata.hashCode",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node)"
            ],
            "linear": [
                "datacenter"
            ],
            "super-linear": [
                "table^2"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.FrameDecoderWith8bHeader.decode",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(node)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.addValue",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)"
            ],
            "super-linear": [
                "table^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.serializeRowBody",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "datacenter * token",
                "table^2"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringComparator.compare",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node)",
                "Burst(table, row)",
                "Burst(table)"
            ],
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "token^2",
                "datacenter * token",
                "table^3",
                "table^2"
            ],
            "large-linear": [
                "187table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.RestrictionSet.hasSupportingIndex",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.ContextAllocator.clone",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node)",
                "Burst(table)"
            ],
            "linear": [
                "token"
            ],
            "super-linear": [
                "table^2",
                "table^3"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.assign",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)",
                "log(table * row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "token^2",
                "table^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.AbstractBTreePartition.sliceIterator",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "token"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPExecutor.addTask",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "row"
            ],
            "supra-linear": [
                "0.0824table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.AtomicBTreePartition.addAllWithSizeDeltaInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "token",
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.AbstractType.writtenLength",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "datacenter^3"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow$Builder$CellResolver.resolve",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node)",
                "Burst(table)"
            ],
            "super-linear": [
                "datacenter * token"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.BufferedDataOutputStreamPlus.write",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "token^2"
            ],
            "supra-linear": [
                "log(table * row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Slice.isEmpty",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node)",
                "Burst(table)"
            ],
            "super-linear": [
                "datacenter^2",
                "table^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ColumnIdentifier.prefixComparison",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "super-linear": [
                "keyspace^3",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "node^3",
                "keyspace^3",
                "token^2",
                "table^2",
                "table^3"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.prepare",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^2",
                "table^3"
            ],
            "linear": [
                "datacenter",
                "row"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Serializer.serializeValuesWithoutSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "datacenter * token",
                "table^2"
            ],
            "supra-linear": [
                "0.0211table"
            ],
            "bursty": [
                "Burst(table, row)",
                "Burst(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.UnfilteredValidation.maybeValidateUnfiltered",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "supra-linear": [
                "log(keyspace)",
                "0.0302table",
                "log(table * row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ReadCommand$1MetricRecording.applyToRow",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "linear": [
                "datacenter"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.LeafBTreeSearchIterator.rewind",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^3",
                "datacenter * token",
                "token^2",
                "table^2",
                "table^3"
            ],
            "bursty": [
                "Burst(node)",
                "Burst(node, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.LeafBTreeSearchIterator.next",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^3",
                "datacenter * token",
                "table^2"
            ],
            "supra-linear": [
                "log(node)",
                "log(keyspace)",
                "log(table)",
                "log(table * row)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "quasi-linear": [
                "datacenter * token * log(datacenter * token)"
            ],
            "large-linear": [
                "532table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.applyLeaf",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^3",
                "keyspace^2",
                "datacenter^2",
                "table^2"
            ],
            "bursty": [
                "Burst(node, token)"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow$Builder.addCell",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^3",
                "keyspace^2",
                "node^2",
                "datacenter^2",
                "token^2",
                "table^2"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.SimpleStrategy.calculateNaturalReplicas",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "node * token * log(node * token)"
            ],
            "super-linear": [
                "node^2",
                "datacenter^3"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.firstTokenIndex",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "node * log(node)",
                "node * token * log(node * token)",
                "datacenter * token * log(datacenter * token)"
            ],
            "super-linear": [
                "keyspace^2"
            ],
            "linear": [
                "row",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.getPredecessor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "node * log(node)",
                "datacenter * token * log(datacenter * token)"
            ],
            "linear": [
                "keyspace"
            ],
            "super-linear": [
                "node^2",
                "datacenter^2 * token"
            ],
            "bursty": [
                "Burst(table)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.buildLeaf",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "datacenter * token",
                "table^2"
            ],
            "linear": [
                "token",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.runOnClose",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.FastByteOperations$UnsafeOperations.compareTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "node * log(node)",
                "node * token * log(node * token)",
                "datacenter * token * log(datacenter * token)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "super-linear": [
                "keyspace^2",
                "token^2",
                "table^3",
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.PendingRepairHolder.getNextRepairFinishedTask",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "node",
                "keyspace",
                "token",
                "table"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)",
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.RandomAccessReader.seek",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "datacenter",
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.MetadataCollector$MinMaxLongTracker.update",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "linear": [
                "table"
            ],
            "supra-linear": [
                "log(table)",
                "0.0328table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow$Builder.build",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "keyspace^2",
                "datacenter * token",
                "table^2"
            ],
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.lambda$serializeRowBody$0",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "datacenter"
            ],
            "supra-linear": [
                "log(table)",
                "log(table * row)"
            ],
            "super-linear": [
                "table^3",
                "table^2"
            ],
            "large-linear": [
                "107table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MergeIterator$ManyToOne.consume",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "datacenter^2",
                "table^2"
            ],
            "bursty": [
                "Burst(table, row)",
                "Burst(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata$1.computeNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "node * token * log(node * token)",
                "datacenter * token * log(datacenter * token)"
            ],
            "super-linear": [
                "node^2",
                "token^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir.findIndex",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(node)",
                "log(datacenter * token)",
                "log(datacenter)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.MetadataCollector$MinMaxIntTracker.update",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "datacenter * token"
            ],
            "supra-linear": [
                "0.0303keyspace",
                "log(table * row)",
                "log(table)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MergeIterator$ManyToOne.advance",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "supra-linear": [
                "log(table * row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getNextBackgroundTask",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(datacenter * token)",
                "log(table * row)",
                "log(table)"
            ],
            "linear": [
                "node",
                "keyspace",
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.DataOutputBuffer.checkedArraySizeCast",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)"
            ],
            "bursty": [
                "Burst(table)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.deserializeOne",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "linear": [
                "datacenter",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.isRowCacheEnabled",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.DataType.serializedValueSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)",
                "log(table)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.BufferedDataOutputStreamPlus.writeBoolean",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)"
            ],
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.PendingRepairManager.getMaxEstimatedRemainingTasks",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)",
                "log(table * row)"
            ],
            "linear": [
                "node",
                "token",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.selfAssign",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "super-linear": [
                "table * row",
                "table^3"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow$CellIterator.computeNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "large-linear": [
                "593keyspace"
            ],
            "super-linear": [
                "token^2",
                "table^2",
                "table^3"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.getBuckets",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)",
                "log(table * row)"
            ],
            "linear": [
                "node",
                "keyspace",
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.AbstractCompactionStrategy.worthDroppingTombstones",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(node)",
                "log(node * token)",
                "log(datacenter * token)",
                "log(table)",
                "log(table * row)"
            ],
            "linear": [
                "keyspace",
                "table"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BasePartitions.hasNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "super-linear": [
                "keyspace^2"
            ],
            "linear": [
                "datacenter",
                "row"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.AbstractIterator.hasNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "super-linear": [
                "keyspace^3",
                "node^3",
                "datacenter^3"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.buildInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)"
            ],
            "bursty": [
                "Burst(node)",
                "Burst(table)"
            ],
            "super-linear": [
                "keyspace^3",
                "datacenter * token",
                "table^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.Bounds.contains",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0965keyspace"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.AbstractCell.digest",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0303keyspace"
            ],
            "large-linear": [
                "185keyspace",
                "193keyspace",
                "193table"
            ],
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor.logExceptionsAfterExecute",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "large-linear": [
                "718keyspace"
            ],
            "super-linear": [
                "node^3",
                "keyspace^3",
                "node^2 * token",
                "table^3",
                "table * row"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "quasi-linear": [
                "datacenter * token * log(datacenter * token)"
            ],
            "supra-linear": [
                "log(datacenter)",
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cells.resolveRegular",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "keyspace",
                "row",
                "table"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(node, token)",
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "datacenter * token",
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.startup",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.DiskBoundaryManager.getDiskBoundaries",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicationStrategy.getAddressReplicas",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "supra-linear": [
                "log(node * token)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.AbstractCompactionStrategy.validateOptions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "table"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.PendingRepairHolder.setStrategyInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.PendingRepairManager.getNumPendingRepairFinishedTasks",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "keyspace",
                "token",
                "table"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)",
                "log(table)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyHolder.setStrategyInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.EndpointState.hasLegacyFields",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token",
                "datacenter",
                "table"
            ],
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ColumnMetadataVersionComparator.compare",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "row"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(node, token)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "super-linear": [
                "datacenter * token",
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyHolder.getBackgroundTaskSuppliers",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token",
                "table"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)",
                "log(table * row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.getNextBackgroundTask",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "keyspace",
                "token",
                "table"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)",
                "log(table * row)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.setStrategy",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.FailureDetector.interpret",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.Range.sort",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cells.reconcile",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "row",
                "table"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "datacenter * token"
            ],
            "bursty": [
                "Burst(node, token)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.onChange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager$CompactionExecutor.afterExecute",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "keyspace",
                "token",
                "table"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.getPrimaryRangesFor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "super-linear": [
                "node^3"
            ],
            "quasi-linear": [
                "datacenter * token * log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.mostInterestingBucket",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "keyspace",
                "token",
                "table"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)",
                "log(table * row)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.getEstimatedCompactionsByTasks",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "keyspace",
                "token",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(table)",
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Directories.getWriteableLocations",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.getGossipStatus",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "super-linear": [
                "token^2"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.PendingRepairHolder.getRepairFinishedTaskSuppliers",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "keyspace",
                "token",
                "table"
            ],
            "supra-linear": [
                "log(table)",
                "log(table * row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.PendingRepairHolder.getBackgroundTaskSuppliers",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "keyspace",
                "token",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(table)",
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicaCollection.filter",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(node, token)"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.Splitter.splitOwnedRanges",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.createSSTableAndLengthPairs",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "keyspace",
                "token",
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(table)",
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.isUpgradingFromVersionLowerThan",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token",
                "table"
            ],
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.reload",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.doOnChangeNotifications",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnection.enqueue",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "datacenter * token"
            ],
            "supra-linear": [
                "log(datacenter)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.applyNewStates",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "datacenter^2"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.InetAddressAndPort.validatePortRange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "token^2",
                "datacenter * token"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.FastByteOperations$UnsafeOperations.copy",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "keyspace^2",
                "token^2",
                "datacenter * token",
                "table^3",
                "table^2"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.EndpointStateSerializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "token^2",
                "datacenter * token",
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.EndpointStateSerializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "node * token",
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.ManyToOneConcurrentLinkedQueue.internalOffer",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "token^2",
                "datacenter * token",
                "datacenter^2 * token",
                "table^3"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.RebufferingInputStream.read",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "token^2",
                "datacenter * token",
                "datacenter^3",
                "table^2",
                "table * row",
                "table^3"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(table)",
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.EndpointState.addApplicationStates",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "datacenter * token"
            ],
            "linear": [
                "token",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.vint.VIntCoding.getUnsignedVInt",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "token^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.getStateForVersionBiggerThan",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "token^2",
                "datacenter * token",
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.ArrivalWindow.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "datacenter^2"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.ArrayBackedBoundedStats.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "node * token",
                "datacenter^2"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.ensureRoom",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)"
            ],
            "linear": [
                "token",
                "table",
                "row"
            ],
            "supra-linear": [
                "log(datacenter)",
                "log(table)"
            ],
            "super-linear": [
                "datacenter * token",
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Rows.copy",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)",
                "Burst(datacenter, token)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "supra-linear": [
                "log(table * row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.FrameDecoderCrc.readHeader6b",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)"
            ],
            "linear": [
                "datacenter",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundMessageQueue$Locked.run",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "super-linear": [
                "datacenter * token"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.TreeBuilder.update",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "linear": [
                "token",
                "row",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.isRoot",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(node, token)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.SlabAllocator.getRegion",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(table, row)"
            ],
            "super-linear": [
                "token^2",
                "table^3"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Columns$Serializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(table)"
            ],
            "linear": [
                "token",
                "row"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.buildFromRange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(node, token)",
                "Burst(table, row)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "token"
            ],
            "super-linear": [
                "datacenter^2",
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Memtable$ColumnsCollector.update",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "token",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Tracker.getMemtableFor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "linear": [
                "token",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.index.SecondaryIndexManager.newUpdateTransaction",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "token",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor.newTaskFor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(table, row)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager.submitBackground",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)",
                "log(table * row)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.AtomicBTreePartition$RowUpdater.builder",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "super-linear": [
                "keyspace^2"
            ],
            "linear": [
                "token",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor.extractThrowable",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "super-linear": [
                "keyspace^3",
                "node^2 * token",
                "token^3",
                "table^3",
                "table^2 * row"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.cloneAfterAllSettled",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.Refs.tryRef",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "token",
                "table",
                "row"
            ],
            "supra-linear": [
                "log(table)",
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.DiskBoundaryManager.getDiskBoundaryValue",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.MemtableAllocator$SubAllocator.allocate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "super-linear": [
                "keyspace^3",
                "token^2"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "large-linear": [
                "105table",
                "111table"
            ],
            "supra-linear": [
                "log(table * row)",
                "log(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.AbstractAllocator.clone",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "token"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.getTotalBytes",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(datacenter, token)"
            ],
            "linear": [
                "keyspace",
                "table"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.AsyncPromise.notifyListeners",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "supra-linear": [
                "log(datacenter)"
            ],
            "super-linear": [
                "token^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Columns$Serializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "token"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.commitlog.CommitLogSegmentManagerStandard.allocate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "linear": [
                "keyspace",
                "token",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)",
                "Burst(node, token)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.SSTableIntervalTree.buildIntervals",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "token",
                "table"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnection$Delivery.run",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "linear": [
                "datacenter",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "super-linear": [
                "node^2",
                "datacenter^2",
                "datacenter * token"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.notifyFailureDetector",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(datacenter)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAck2VerbHandler.doVerb",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(datacenter)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.FrameDecoder.deliver",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "datacenter",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.PendingRepairHolder.managesRepairedGroup",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(datacenter * token)"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.InboundMessageHandler$ProcessMessage.run",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(table * row)"
            ],
            "super-linear": [
                "node^2",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnection.acquireCapacity",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(table * row)"
            ],
            "super-linear": [
                "node^2",
                "datacenter * token"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSynVerbHandler.doVerb",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(datacenter)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.trimToThresholdWithHotness",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(node * token)",
                "log(table)",
                "log(row)"
            ],
            "linear": [
                "keyspace",
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.AbstractCompactionStrategy.filterSuspectSSTables",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(table)",
                "log(table * row)"
            ],
            "linear": [
                "keyspace",
                "token",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.updateScores",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(datacenter)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "datacenter",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.accumulateLeaf",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "datacenter^3",
                "table^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.ensureParent",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)"
            ],
            "linear": [
                "token",
                "datacenter",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.Message$Serializer.inferMessageSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.AbstractMessageHandler.acquireCapacity",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(table * row)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$LocalPool.tryGetInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(node * token)",
                "log(datacenter)"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table, row)",
                "Burst(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.examineGossiper",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(datacenter)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getHolder",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)"
            ],
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table, row)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.getHotnessMap",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(node * token)",
                "log(table)"
            ],
            "linear": [
                "keyspace",
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAckSerializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(datacenter)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.Message$Serializer.extractParamsSizePost40",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.getNextBackgroundSSTables",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(keyspace)",
                "log(table)",
                "log(table * row)"
            ],
            "linear": [
                "keyspace",
                "token",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyHolder.managesRepairedGroup",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(datacenter * token)",
                "log(table * row)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "datacenter^2",
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.applyStateLocally",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(datacenter)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundMessageQueue.lockOrCallback",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)"
            ],
            "linear": [
                "token",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.Verb.fromId",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0514node"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnection$EventLoopDelivery.doRun",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Rows.merge",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)",
                "table * log(table)"
            ],
            "linear": [
                "keyspace",
                "token",
                "row",
                "table"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$Chunk.free",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "linear": [
                "token"
            ],
            "bursty": [
                "Burst(table)",
                "Burst(table, row)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.finish",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)",
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "token",
                "row"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.sizeOfStructureOnHeap",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(datacenter)"
            ],
            "super-linear": [
                "datacenter * token"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.getMaxEndpointStateVersion",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)",
                "node * token * log(node * token)"
            ],
            "super-linear": [
                "token^2"
            ],
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.Crc.crc24",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "supra-linear": [
                "log(node)",
                "log(table)"
            ],
            "linear": [
                "token"
            ],
            "super-linear": [
                "datacenter^2",
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.Message$Serializer.serializedParamsSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "node^2",
                "datacenter * token"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSerializationHelper.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "supra-linear": [
                "log(node)",
                "log(datacenter)"
            ],
            "super-linear": [
                "datacenter * token"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.EndpointStateSerializer.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "node^2",
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SingleTableUpdatesCollector.toMutations",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SystemKeyspace.updateTableEstimates",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Constants$Literal.parsedValue",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.snapshotExists",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Directories.snapshotExists",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.CqlBuilder.indentIfNeeded",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.computeSizeEstimates",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PurgeFunction.lambda$new$0",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.messages.QueryMessage.execute",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RangeTombstoneList.addAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.TableMetadata.appendTableOptions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.UnfilteredPartitionIterators$Serializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.PartitionKeySingleRestrictionSet.bounds",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.sortedByProximity",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.snapshotWithoutFlush",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.TableMetadata.appendColumnDefinitions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.buildPartitionKeyNames",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.selectAndReference",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionController.getPurgeEvaluator",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.DuplicateRowChecker.onPartitionClose",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "row"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.SingleColumnRelation.toReceivers",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableScanner.seekToCurrentRangeStart",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "table"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$LocalPool.put",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "datacenter * token"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.snapshot",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.Replicas.countFull",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.StatementRestrictions.processPartitionKeyRestrictions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.writeComplexColumn",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.forceFlush",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.relation",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.CqlBuilder.append",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet.trim",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.CompositeType.build",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.toArray",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.TableMetadata.appendDropColumns",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow.minDeletionTime",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.TableMetadata.appendCqlTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.selectors",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTable.readTOC",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Message$Request.execute",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(table, row)"
            ],
            "supra-linear": [
                "log(table)",
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.getKeyspaceMetadata",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "row",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Directories.getLocationForDisk",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet$Flag.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table, row)"
            ],
            "supra-linear": [
                "log(table)",
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet$ResultMetadata$Codec.encodedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SystemKeyspace.updateSizeEstimates",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.reads.DataResolver.needsReplicaFilteringProtection",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.findByIndex",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.ClientState.ensurePermission",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ReadCommand.executeLocally",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter"
            ],
            "supra-linear": [
                "log(row)",
                "log(table * row)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.BloomFilter.setIndexes",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(datacenter * token)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.columnFamilyName",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.RestorableMeter.tickIfNecessary",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RangeTombstoneList.insertFrom",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.CqlParser.query",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "table^2"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Directories.getOrCreate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.RestrictionSet.addFunctionsTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(table)",
                "Burst(table, row)"
            ],
            "linear": [
                "row"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.estimateMeanPartitionSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "token",
                "row",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow.hasComplexDeletion",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "datacenter * token",
                "table^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.SimpleCondition.awaitUntil",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "row",
                "table"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.MutableDeletionInfo.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "token",
                "table"
            ],
            "bursty": [
                "Burst(table, row)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.ObjectSizes.sizeOnHeapOf",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "keyspace",
                "row"
            ],
            "super-linear": [
                "datacenter^2",
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.serializedMarkerBodySize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.DataType.writeValue",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "super-linear": [
                "table^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RegularAndStaticColumns.mergeTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "token",
                "table"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.Range.deoverlap",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RangeTombstoneList.addInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(node, token)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.getSampleIndexesForRanges",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RangeTombstoneList$3.computeNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Lexer.mWS",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "row"
            ],
            "super-linear": [
                "table^3"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Directories.getWriteableLocation",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.View.sstablesInBounds",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "datacenter",
                "row",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.estimatedKeysForRanges",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ReadCommand$CheckForAbort.applyToRow",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "datacenter"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.Component$Type.fromRepresentation",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.EstimatedHistogram.rawMean",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.ColumnMetadata.lambda$makeCellPathComparator$3",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "node",
                "row",
                "table"
            ],
            "super-linear": [
                "datacenter * token"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Columns$Serializer.encodeBitmap",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RangeTombstoneList.clone",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.streamhist.StreamingTombstoneHistogramBuilder$Spool.tryAddOrAccumulate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.Range.normalize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "table"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.estimatePartitionsCount",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "token",
                "row",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RangeTombstoneList.copy",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.streamhist.StreamingTombstoneHistogramBuilder.update",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RangeTombstoneList.forwardIterator",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.streamhist.StreamingTombstoneHistogramBuilder$Spool.tryCell",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.stopSpinning",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.EstimatedHistogram.count",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(table)",
                "Burst(table, row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Lexer.mIDENT",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RangeTombstoneList.collectStats",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.vint.VIntCoding.readUnsignedVInt",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.RestrictionSet.getRestrictions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "row",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.reads.range.ReplicaPlanMerger.computeNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)"
            ],
            "bursty": [
                "Burst(table)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.getDataLimits",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)",
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ],
            "bursty": [
                "Burst(table, row)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableScanner.addRange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "token"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.OpOrder$Group.unlink",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.DataType.fromType",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)",
                "log(table * row)"
            ],
            "bursty": [
                "Burst(table, row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.columniterator.SSTableIterator$ForwardReader.hasNextInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "super-linear": [
                "keyspace^2",
                "datacenter * token",
                "table^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.filter.DataLimits$CQLLimits$CQLCounter.incrementRowCount",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "0.0260keyspace",
                "0.0171table"
            ],
            "super-linear": [
                "table^2"
            ],
            "linear": [
                "row"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.update",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(datacenter)"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(node, token)",
                "Burst(table)"
            ],
            "linear": [
                "token",
                "row",
                "table"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.FileUtils.close",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "token"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SharedExecutorPool.schedule",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.filter.RowFilter.hasExpressionOnClusteringOrRegularColumns",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.selection.ResultSetBuilder.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)",
                "0.0297table"
            ],
            "large-linear": [
                "357keyspace"
            ],
            "super-linear": [
                "table^2"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet.computeResultMetadataId",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "0.0546keyspace",
                "log(row)",
                "log(table)"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Serializer.makeHeader",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "datacenter * token",
                "table^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.View.select",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(node)"
            ],
            "super-linear": [
                "datacenter * token",
                "table^2"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.index.SecondaryIndexManager.validate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "row"
            ],
            "bursty": [
                "Burst(table)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.AbstractBounds.bounds",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTable.validateRepairedMetadata",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.reads.repair.BlockingReadRepair.maybeSendAdditionalWrites",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.selectStatement",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Envelope$Header$Flag.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.process",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "linear": [
                "keyspace",
                "token",
                "table"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.RestrictionSet.mergeRestrictions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "row",
                "table"
            ],
            "bursty": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ColumnSpecification.allInSameTable",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.FailureDetector.isAlive",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "row",
                "table"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.LeafBTreeSearchIterator.indexOfCurrent",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)"
            ],
            "large-linear": [
                "144keyspace"
            ],
            "super-linear": [
                "table^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.lambda$serializedRowBodySize$1",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "token^2",
                "table^2"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.QueryEvents.notifyQuerySuccess",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.AbstractBTreePartition$ClusteringsIterator.computeNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(table)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Message$Decoder.decodeMessage",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Flusher$FlushBuffer.allocate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.WaitQueue.signalAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.UnfilteredDeserializer.compareNextTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "0.0278table"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "linear": [
                "datacenter",
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.copyKeys",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(node)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "token",
                "table",
                "row"
            ],
            "super-linear": [
                "datacenter * token",
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet$Codec.encode",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.StatementRestrictions.processClusteringColumnsRestrictions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "row",
                "table"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.addUpdates",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement$RawStatement.getAggregationSpecification",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.unreserved_keyword",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.StatementRestrictions.getPartitionKeyBounds",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.SetType.toString",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SerializationHeader.toComponent",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.QueryOptions$Codec.decode",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Flusher$FlushBuffer.finish",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "0.0825table"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.StatementRestrictions.isColumnRange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.termGroup",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "row"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.EstimatedHistogram.newOffsets",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.DeserializationHelper.isDropped",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)",
                "log(table * row)"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "super-linear": [
                "token^2",
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.getQuery",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.QueryProcessor.processStatement",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(table)",
                "table^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet$ResultMetadata$Codec.encode",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0316keyspace",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.MapType.toString",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0883keyspace",
                "0.0914keyspace",
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow.lambda$filter$4",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "datacenter^3",
                "token^2",
                "table^2"
            ],
            "bursty": [
                "token^2",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.RowAndDeletionMergeIterator.computeNextInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "token^2",
                "table^2"
            ],
            "linear": [
                "keyspace",
                "table",
                "row"
            ],
            "supra-linear": [
                "log(table * row)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SimpleBuilders$RowBuilder.getColumn",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "datacenter * token"
            ],
            "bursty": [
                "Burst(table, row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "token^2",
                "table^2",
                "table^3"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "large-linear": [
                "524table"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.deserializeRowBody",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "linear": [
                "datacenter",
                "row"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "datacenter * token",
                "table^3",
                "table^2"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(node, token)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow.purge",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "linear": [
                "datacenter",
                "row"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.compareNextTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "linear": [
                "datacenter",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.Refs.release",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table * row)",
                "log(table)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Row$Merger$ColumnDataReducer.getReduced",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^3"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.AbstractType.writeValue",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "token^2",
                "table^2"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Serializer.valuesWithoutSizeSerializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "datacenter * token",
                "table^2"
            ],
            "bursty": [
                "Burst(node, token)"
            ],
            "linear": [
                "row"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SimpleBuilders.makeClustering",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "linear": [
                "token",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.LeafBTreeSearchIterator.searchNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "table"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MergeIterator$ManyToOne.replaceAndSink",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "linear": [
                "datacenter",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.selection.ResultSetBuilder.newRow",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^3",
                "table^2"
            ],
            "supra-linear": [
                "0.0238keyspace"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.PartitionKeySingleRestrictionSet.values",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)"
            ],
            "linear": [
                "datacenter"
            ],
            "super-linear": [
                "table^2"
            ],
            "supra-linear": [
                "log(table)",
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.MmappedRegions$State.floor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "datacenter"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Memtable.makePartitionIterator",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table, row)"
            ],
            "linear": [
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Slice.make",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "super-linear": [
                "datacenter^2",
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.RestrictionSet.addRestriction",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "row"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.commitlog.CommitLogSegment.allocate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "token"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "token",
                "row"
            ],
            "supra-linear": [
                "log(table * row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement$RawStatement.prepareSelection",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table, row)"
            ],
            "linear": [
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.lambda$new$0",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.reads.repair.BlockingReadRepair.awaitWrites",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.setupOnline",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.reads.AbstractReadExecutor.makeRequests",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.estimateKeys",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringComparator.make",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "super-linear": [
                "keyspace^2"
            ],
            "linear": [
                "token",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Serializer.deserializeValuesWithoutSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "supra-linear": [
                "0.0408table",
                "log(table * row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.QueryOptions$Codec$Flag.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement$RawStatement.getOrderingColumns",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.cident",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.streamhist.StreamingTombstoneHistogramBuilder$DataHolder.addValue",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.ClientState.getTimestamp",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.ReplicaPlans.contactForRead",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table, row)",
                "Burst(table)"
            ],
            "supra-linear": [
                "0.0636keyspace"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir.bucketValue",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.View.liveSSTablesInBounds",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.makeSlices",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$MutationSerializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "token",
                "row",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.identityMap",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.filter.ColumnFilter$Builder.addAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.reads.DataResolver.resolveInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir$EstimatedHistogramReservoirSnapshot.count",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.RangeTombstoneMarker$Merger.merge",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RegularAndStaticColumns$Builder.addAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.getMeanEstimatedCellPerPartitionCount",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.TypeParser.stringifyTypeParameters",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(table * row)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.ClusteringColumnRestrictions.hasContains",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.MultiCBuilder$OneClusteringBuilder.addElementToAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "datacenter"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.transformAndFilter",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PartitionUpdate.operationCount",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "token",
                "table",
                "row"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.reads.DataResolver.resolve",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SimpleBuilders$RowBuilder.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "super-linear": [
                "datacenter * token",
                "table^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.RangeTombstoneMarker$Merger.updateOpenMarkers",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.sortedByProximityWithBadness",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table, row)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableReader.getPosition",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(datacenter * token)",
                "log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.reads.range.RangeCommandIterator.query",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.relationOrExpression",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(table)",
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet$Codec.encodedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Envelope$Decoder.extractHeader",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table, row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.apply",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "datacenter^2",
                "table^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement$RawStatement.prepare",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "table"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.findIndex",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "table^2"
            ],
            "linear": [
                "datacenter",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager.waitForCessation",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyHolder.getMaximalTasks",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.PendingRepairManager.getMaximalTasks",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.FBUtilities.waitOnFutures",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager.isCompacting",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.resumeAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.PendingRepairHolder.getMaximalTasks",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.ClusteringColumnRestrictions.hasMultiColumnSlice",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.getValidColumnFamilies",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.ShareableBytes.doRelease",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "super-linear": [
                "datacenter * token"
            ],
            "bursty": [
                "Burst(table)",
                "Burst(table, row)"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.pauseCompactionStrategies",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Message.encode",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.lambda$getMaximalTasks$2",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PartitionUpdate$Builder.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "super-linear": [
                "datacenter * token",
                "table^2"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Dispatcher.flush",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "log(table * row)",
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.forceKeyspaceCompaction",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager.interruptCompactionForCFs",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager.interruptCompactionFor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ReadExecutionController.close",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "table"
            ],
            "bursty": [
                "Burst(table)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager.submitMaximal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.runWithCompactionsDisabled",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.orIn",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.addAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "token",
                "row",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.ProtocolVersion.decode",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.AbstractBTreePartition.staticRow",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "row"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow.filter",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "super-linear": [
                "datacenter * token"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.FrameDecoderCrc.unpackFrame",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "supra-linear": [
                "log(table)",
                "log(table * row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.selection.ResultSetBuilder.build",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.StatementRestrictions.needFiltering",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Lexer.mSTRING_LITERAL",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.ReplicaPlans.assureSufficientLiveReplicas",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "row"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.TableMetrics$TableHistogram.update",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node, token)",
                "Burst(table)"
            ],
            "linear": [
                "datacenter",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.clear",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "linear": [
                "token",
                "row",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$MicroQueueOfChunks.removeIf",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.ClusteringColumnRestrictions.boundsAsClustering",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.StatementRestrictions.getRowFilter",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node, token)",
                "Burst(datacenter, token)"
            ],
            "linear": [
                "token",
                "table"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PartitionUpdate$PartitionUpdateSerializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "token",
                "row"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.CQLMessageHandler.processRequest",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RegularAndStaticColumns$Builder.build",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table, row)",
                "table^2"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SingleTableUpdatesCollector.getPartitionUpdateBuilder",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "row",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.transformAndFilter",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(node, token)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "super-linear": [
                "datacenter * token",
                "table^2"
            ],
            "linear": [
                "table",
                "row"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Memtable.accepts",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "token",
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ConsistencyLevel.blockFor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Clustering$Serializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "token",
                "row"
            ],
            "super-linear": [
                "table^2"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.commitlog.AbstractCommitLogService$SyncRunnable.sync",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(node)",
                "log(datacenter)",
                "log(table)"
            ],
            "linear": [
                "datacenter",
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.commitlog.CommitLogSegment.sync",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(node)",
                "log(datacenter)",
                "log(table)"
            ],
            "linear": [
                "datacenter",
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.synpred3_Parser",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.reads.ReadCallback.awaitResults",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(table, row)",
                "Burst(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Slices.with",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.reads.range.RangeCommandIterator.sendNextRequests",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.authorize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.serializedRowBodySize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "token",
                "table",
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.commitlog.AbstractCommitLogSegmentManager.sync",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(node)",
                "log(datacenter)",
                "log(table)"
            ],
            "linear": [
                "datacenter",
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.TimeUUIDType.compareCustom",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2"
            ],
            "linear": [
                "datacenter",
                "row"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RegularAndStaticColumns$Builder.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2"
            ],
            "linear": [
                "datacenter",
                "row"
            ],
            "supra-linear": [
                "log(table)",
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.Memory.checkBounds",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2"
            ],
            "bursty": [
                "Burst(node, token)",
                "Burst(table)"
            ],
            "linear": [
                "datacenter",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.SlabAllocator.allocate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^3",
                "token^2",
                "table^2"
            ],
            "bursty": [
                "Burst(node, token)",
                "Burst(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir.rescale",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)",
                "Burst(datacenter, token)",
                "Burst(table, row)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.tracing.Tracing.initializeFromMessage",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.InetAddressAndPort.toString",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)"
            ],
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.FullBTreeSearchIterator.next",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node * token",
                "datacenter * token"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.Message$Serializer.serializeParams",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.treeIndexOfKey",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.Message$Serializer.extractParams",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "row"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.CellPath.dataSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "row"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.TreeCursor.moveOne",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "table"
            ],
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.AsyncPromise.trySet",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)"
            ],
            "super-linear": [
                "token^2"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.ClusteringColumnRestrictions.valuesAsClustering",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "linear": [
                "token",
                "row",
                "table"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.TreeCursor.seekTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.QueryProcessor.makeInternalOptions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table, row)",
                "Burst(table)"
            ],
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.WaitQueue.cleanUpCancelled",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnection$1Initiate.onFailure",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation.cdcEnabled",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ReadCommand$1MetricRecording.onClose",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.AbstractBTreePartition.build",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.view.ViewManager.updatesAffectView",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.filter.ColumnFilter$Builder.build",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.getTableMetadata",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "table"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaKeyspace.makeUpdateForSchema",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.calculatePendingRanges",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.TimeWindowCompactionStrategy.getNextBackgroundTask",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.BiMultiValMap.removeValue",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.removeEndpoints",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.RowAndDeletionMergeIterator.updateNextRange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnection.id",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.AsymmetricOrdering.binarySearchAsymmetric",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "table"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ReadExecutionController.forCommand",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "table"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$PartitionUpdateCollector.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.TimeWindowCompactionStrategy.getNextBackgroundSSTables",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.TokenSerializer.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.handleStateBootstrap",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaKeyspace.convertSchemaToMutations",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.SimpleCondition.await",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.updateNormalTokens",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.InboundConnectionInitiator$Handler.initiate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.LeveledManifest.getLevelCount",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Server$EventNotifier.onStatusChange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.InboundSockets.open",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.removeEndpoint",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.addLocalApplicationStateInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.maybeGossipToSeed",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MonotonicClock$AbstractEpochSamplingClock.updateAlmostSameTime",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.RequestCallbacks.expire",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.MigrationManager$MigrationsSerializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.onJoin",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.updateHostId",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnection$1Initiate.attempt",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.UntypedResultSet$FromPager$1.computeNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.InboundConnectionInitiator$Handler.setupMessagingPipeline",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SinglePartitionReadCommand.queriesMulticellType",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager.setRate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.markDead",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.examineShadowState",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.SocketFactory.encryptionConnectionSummary",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.HandshakeProtocol$Initiate.encodeFlags",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$Chunk.tryRecycle",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.AbstractMessageHandler.channelInactive",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.StatementRestrictions.getPartitionKeyBoundsForTokenRestrictions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.addBootstrapTokens",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.LeveledManifest.getCompactionCandidates",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SinglePartitionReadQuery$Group.executeLocally",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.AsyncPromise.registerToWait",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnectionSettings.withDefaultReserveLimits",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.HandshakeProtocol$Initiate.maybeDecode",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.filter.ColumnFilter$Builder.buildSubSelections",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnection.lambda$requestConnect$0",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.ByteBufferUtil.clone",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnectionInitiator$Handler.decode",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.mergeAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "row",
                "table"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundMessageQueue.runEventually",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.executeInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.sendGossip",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.makeRandomGossipDigest",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.functions.TokenFct.execute",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ],
            "bursty": [
                "Burst(table, row)"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.doBeforeChangeNotifications",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.doStatusCheck",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.LeveledManifest.getEstimatedTasks",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager.finishAndClearBatches",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.functions.FunctionCall.bindAndGet",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "row"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnectionInitiator.initiate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SinglePartitionReadCommand.queryMemtableAndDiskInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.MessagingMetrics.resetAndConsumeDroppedErrors",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.lambda$getBackgroundCompactionTaskSubmitter$0",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.LeveledManifest.calculateLastCompactedKeys",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.handleMajorStateChange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LifecycleTransaction.checkpoint",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.getMeanPartitionSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.DefaultNameFactory.createDefaultMBeanName",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.FutureCombiner.lambda$new$0",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.pager.PartitionRangeQueryPager.nextPageReadQuery",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.LeveledCompactionStrategy.getNextBackgroundTask",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager.processBatchlogEntries",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper$GossipTask.run",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.realMarkAlive",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SinglePartitionReadCommand$Group.create",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnectionInitiator.lambda$null$0",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.RequestCallbacks.addWithExpiration",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.getSliceCommands",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.PendingRangeCalculatorService$PendingRangeTask.run",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.notifyDown",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.MigrationManager$MigrationsSerializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.LeveledCompactionStrategy.findDroppableSSTable",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.removeFromMoving",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.addLocalApplicationStates",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.isShutdown",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAck2Serializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAckVerbHandler.doVerb",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAck2Serializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAckSerializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.Message$Serializer.skipParamsPost40",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.PrunableArrayQueue.prune",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAckSerializer.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAck2Serializer.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSerializationHelper.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSerializationHelper.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.JVMStabilityInspector.inspectThrowable",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "token^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.View$3.apply",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.prepareForObsoletion",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.PendingRepairHolder.replaceSSTables",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LifecycleTransaction.doCommit",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnection.andThen",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getHolderIndex",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "linear": [
                "table"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.WrappedSharedCloseable$Tidy.tidy",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.RebufferingInputStream.readPrimitiveSlowly",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LogReplica.append",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table, row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTable.bytesOnDisk",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LogRecord.getExistingFiles",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LogFile.makeRecords",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.AbstractArrayClusteringPrefix.getBufferArray",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.AbstractStrategyHolder$GroupedSSTableContainer.getGroup",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.AbstractStrategyHolder$GroupedSSTableContainer.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.AbstractCompositeType.validate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)"
            ],
            "bursty": [
                "Burst(table)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.BloomFilter.isPresent",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)",
                "log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.filter.ClusteringIndexNamesFilter.shouldInclude",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.EmptyIterators.unfilteredRow",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTable.getAllFilePaths",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.run",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(token)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.skipNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.UnfilteredDeserializer.nextIsRow",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.TableMetadata.compareColumns",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.hasComponent",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.selector",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Flusher.flushWrittenChannels",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.executeInternalWithoutCondition",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.addFunctionsTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.normalInsertStatement",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Attributes$Raw.prepare",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.sendToHintedReplicas",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.triggers.TriggerExecutor.executeInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.ReplicaPlans$2.select",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Lexer.mINTEGER",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.ReplicaLayout.haveWriteConflicts",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.AbstractWriteResponseHandler.signal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement$Parsed.prepareConditions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.CBUtil.readValueList",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ConsistencyLevel.blockForWrite",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.UpdateStatement$ParsedInsert.prepareInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Attributes.collectMarkerSpecification",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.validate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PartitionUpdate.dataSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Attributes.addFunctionsTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.authorize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.insertStatement",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.UUIDGen.createTimeUUIDBytes",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.ClusteringColumnRestrictions.hasSlice",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.UpdateParameters.newRow",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.readRequiredLists",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.RestrictionSet.hasRestrictionFor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row",
                "table"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ExpirationDateOverflowHandling.maybeApplyExpirationDateOverflowPolicy",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.UpdateStatement.addUpdateForKey",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Flusher.processQueue",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table, row)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.lambda$filter$0",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "table^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.commitlog.IntervalSet$Builder.addAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier.tidy",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.groupSSTables",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.commitlog.IntervalSet$Builder.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.MetadataSerializer.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.ClusteringColumnRestrictions.needFiltering",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)",
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Tracker.notifyDeleting",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LogTransaction.obsoleted",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.BufferedDataOutputStreamPlus.doFlush",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.MetadataCollector.makeList",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LifecycleTransaction.obsolete",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.markObsolete",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.EstimatedHistogram.getBuckets",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.selection.SelectionColumnMapping.simpleMapping",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.FileUtils.write",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.readComplexColumn",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.EstimatedHistogram$EstimatedHistogramSerializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.DeleteStatement.addUpdateForKey",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.streamhist.StreamingTombstoneHistogramBuilder$Spool.forEach",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTable.discoverComponentsFor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LogTransaction$SSTableTidier.run",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.replace",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.LeveledGenerations.allSSTables",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.reads.DigestResolver.getData",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.SingleColumnRestriction.hasSupportingIndex",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.MmappedRegions.updateState",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.Accumulator.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.UUIDType.compareCustom",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairJobDesc$RepairJobDescSerializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTrees$MerkleTreesSerializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.Validator.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.MapSerializer.deserializeForNativeProtocol",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.validateClustering",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.functionArgs",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTree.shouldUseOffHeapTrees",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTrees.tryMoveOffHeap",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.triggers.TriggerExecutor.execute",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.functionName",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIterators.digest",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategyOptions.validateOptions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionIterator.updateBytesRead",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTrees.logRowSizePerLeaf",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.PendingRangeMaps.addIntersections",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.PendingRepairHolder.getScanners",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.SetType.getInstance",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Slices$ArrayBackedSlices.intersects",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTree$TreeRange.addHash",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaKeyspace.createTableParamsFromRow",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.AbstractWriteResponseHandler.maybeTryAdditionalReplicas",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.columniterator.SSTableIterator$ForwardReader.handlePreSliceData",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.CompressionParams.createCompressor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.CompressionParams.copyOptions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairJobDesc$RepairJobDescSerializer.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionController.refreshOverlaps",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.CompactionParams.create",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTrees$MerkleTreesSerializer.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTrees.addTrees",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.MapType.getInstance",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.ValidationManager.doValidation",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.mutate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.ColumnMetadata.comparisonOrder",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.AbstractBounds$AbstractBoundsSerializer.kindFlags",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.SystemDistributedKeyspace.processSilent",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyHolder.getScanners",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTree.histogramOfRowCountPerLeaf",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.ClusteringColumnRestrictions.mergeWith",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.CachingParams.fromMap",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.compress.LZ4Compressor.create",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTree.xor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.AbstractBounds.intersects",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SinglePartitionReadCommand.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.Validator.complete",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.repair.CassandraValidationIterator.close",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairJob.sendValidationRequest",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.TableMetrics$TableTimer$Context.close",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTrees.size",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.TableMetadata$Builder.build",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.AbstractBounds$AbstractBoundsSerializer.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.functions.FunctionResolver.pickBestMatch",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.CompactionParams.classFromName",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.maybeGetScanners",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.Range.subtractContained",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTrees.logRowCountPerLeaf",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.Range.subtractAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.SetSerializer.deserializeForNativeProtocol",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.Validator.prepare",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTree$OnHeapInner.fillInnerHashes",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.FileUtils.closeQuietly",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getEstimatedRemainingTasks",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.executeWithoutCondition",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.Pair.hashCode",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.Range.substractAllFromToken",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.RepairedState.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SinglePartitionReadCommand.queryMemtableAndSSTablesInTimestampOrder",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTrees.init",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.ValidationManager.createMerkleTrees",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairJob.run",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairJobDesc$RepairJobDescSerializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaKeyspace.fetchDroppedColumns",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTree.histogramOfRowSizePerLeaf",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.repair.CassandraValidationIterator.getSSTablesToValidate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.FBUtilities.newPartitioner",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairMessageVerbHandler.doVerb",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SinglePartitionReadCommand.reduceFilter",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.Range.subtract",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$MutationSerializer.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.setOrMapLiteral",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.collectionLiteral",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.Range.compareTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Sets$Literal.prepare",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Lexer.mHEX",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.setLiteral",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.dataSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PartitionUpdate$PartitionUpdateSerializer.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.HistogramBuilder.buildRange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Columns$Serializer.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.functions.FunctionCall$Raw.prepare",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Sets$Literal.validateAssignableTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.unsharedHeapSizeExcludingData",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.EstimatedHistogram.log",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTree$OffHeapInner.deserializeWithoutIdent",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.functions.FunctionResolver.matchAguments",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Sets$DelayedValue.bind",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.HistogramBuilder.buildWithStdevRangesAroundMean",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTree.xorOntoLeft",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.functions.FunctionResolver.collectCandidates",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.functions.FunctionResolver.validateTypes",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.sizeOfComplexColumn",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cells.reconcileComplex",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.functions.FunctionName.equalsNativeFunction",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.functions.FunctionCall.collectMarkerSpecification",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTree$OffHeapNode.hashesDiffer",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairJob.executeTasks",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.normalColumnOperation",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.addRawUpdate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairJob.createStandardSyncTasks",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTrees.difference",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.SSTablesGlobalTracker.handleNotification",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.PendingRangeMaps.pendingEndpointsFor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.SSTablesGlobalTracker.handleSSTablesChange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.functions.FunctionCall$Raw.testAssignment",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    }
]