[
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir$AbstractSnapshot.getValue",
        "lineNumber": 484,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)",
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.CassandraDaemon.lambda$static$1",
        "lineNumber": 193,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.FastByteOperations$UnsafeOperations.copy",
        "lineNumber": 292,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.LoadingMap.getIfReady",
        "lineNumber": 69,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.WaitQueue$Standard.cleanUpCancelled",
        "lineNumber": 251,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table, row)"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.Keyspaces.filter",
        "lineNumber": 111,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.CompactionMetadata$CompactionMetadataSerializer.serializedSize",
        "lineNumber": 79,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.LoadingMap.blockingLoadIfAbsent",
        "lineNumber": 97,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaConstants.isLocalSystemKeyspace",
        "lineNumber": 89,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.getApproximateKeyCount",
        "lineNumber": 280,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.CompactionMetadata$CompactionMetadataSerializer.serialize",
        "lineNumber": 85,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.AbstractCompactionStrategy$ScannerList.getTotalBytesScanned",
        "lineNumber": 334,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Keyspaces.lambda$without$1",
        "lineNumber": 129,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.lambda$getBackgroundCompactionTaskSubmitter$0",
        "lineNumber": 392,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.serialize",
        "lineNumber": 108,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionTask.runMayThrow",
        "lineNumber": 197,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaConstants.isVirtualSystemKeyspace",
        "lineNumber": 106,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableReader.getPosition",
        "lineNumber": 221,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BasePartitions.hasNext",
        "lineNumber": 93,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.util.RebufferingInputStream.read",
        "lineNumber": 84,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "node",
                "table"
            ],
            "supra-linear": [
                "log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTableRewriter$InvalidateKeys.run",
        "lineNumber": 282,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.process",
        "lineNumber": 888,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Keyspaces.containsKeyspace",
        "lineNumber": 94,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.serialize",
        "lineNumber": 131,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaKeyspace.calculateSchemaDigest",
        "lineNumber": 348,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.UnfilteredPartitionIterators$Serializer.serialize",
        "lineNumber": 303,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Keyspaces.getNullable",
        "lineNumber": 89,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionTask.runMayThrow",
        "lineNumber": 202,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.serialize",
        "lineNumber": 124,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.BufferedDataOutputStreamPlus.writeBoolean",
        "lineNumber": 141,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cache.CaffeineCache.remove",
        "lineNumber": 124,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.serialize",
        "lineNumber": 123,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Keyspaces.equals",
        "lineNumber": 178,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BasePartitions.hasNext",
        "lineNumber": 88,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.run",
        "lineNumber": 74,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.CompactionMetadata$CompactionMetadataSerializer.deserialize",
        "lineNumber": 90,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cache.CaffeineCache.put",
        "lineNumber": 109,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTableRewriter.moveStarts",
        "lineNumber": 226,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.runOnClose",
        "lineNumber": 87,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.metrics.LatencyMetrics.addNano",
        "lineNumber": 156,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "node * log(node)"
            ],
            "super-linear": [
                "node^2",
                "datacenter^3"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(row)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.LoadingMap.blockingLoadIfAbsent",
        "lineNumber": 92,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "linear": [
                "datacenter",
                "row",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTableRewriter.append",
        "lineNumber": 130,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(table * row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.updateScores",
        "lineNumber": 290,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)",
                "log(table * row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getLocalPrimaryRangeForEndpoint",
        "lineNumber": 4629,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "node"
            ],
            "super-linear": [
                "token^2"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getPrimaryRangesForEndpoint",
        "lineNumber": 4566,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "node"
            ],
            "super-linear": [
                "token^2"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.selfAssign",
        "lineNumber": 219,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)",
                "log(table * row)"
            ],
            "super-linear": [
                "keyspace^2"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.RowIterators.digest",
        "lineNumber": 49,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0996keyspace"
            ],
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.MergeIterator.close",
        "lineNumber": 55,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0659keyspace"
            ],
            "linear": [
                "keyspace",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BasePartitions.hasNext",
        "lineNumber": 96,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "large-linear": [
                "359keyspace",
                "548keyspace",
                "579keyspace"
            ],
            "super-linear": [
                "table * row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.metrics.MessagingMetrics.recordInternalLatency",
        "lineNumber": 126,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicaCollection$ReplicaMap.internalPutIfAbsent",
        "lineNumber": 364,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "token^2",
                "datacenter * token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.SimpleStrategy.calculateNaturalReplicas",
        "lineNumber": 74,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "token^2",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicationStrategy.getAddressReplicas",
        "lineNumber": 232,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "node * token",
                "datacenter * token"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.getStateForVersionBiggerThan",
        "lineNumber": 1240,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicaCollection$ReplicaMap.get",
        "lineNumber": 378,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "token^2",
                "datacenter * token"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAckSerializer.serializedSize",
        "lineNumber": 94,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.EndpointStateSerializer.serializedSize",
        "lineNumber": 314,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAckVerbHandler.doVerb",
        "lineNumber": 86,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.examineShadowState",
        "lineNumber": 1695,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.notifyFailureDetector",
        "lineNumber": 1275,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.isUpgradingFromVersionLowerThanC17653",
        "lineNumber": 2371,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAckSerializer.serialize",
        "lineNumber": 67,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.sendGossip",
        "lineNumber": 909,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.SortedBiMultiValMap.create",
        "lineNumber": 45,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.RangesByEndpoint$Builder.build",
        "lineNumber": 51,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.getGossipStatus",
        "lineNumber": 1497,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.getPrimaryRangesFor",
        "lineNumber": 790,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "super-linear": [
                "node * token",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAck2Serializer.serializedSize",
        "lineNumber": 78,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.applyNewStates",
        "lineNumber": 1589,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.EndpointMessagingVersions.set",
        "lineNumber": 47,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.CassandraVersion.parseIdentifiers",
        "lineNumber": 146,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.makeRandomGossipDigest",
        "lineNumber": 746,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.EndpointStateSerializer.serialize",
        "lineNumber": 285,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.applyStateLocally",
        "lineNumber": 1528,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.getStateForVersionBiggerThan",
        "lineNumber": 1249,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAckSerializer.deserialize",
        "lineNumber": 81,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAck2Serializer.deserialize",
        "lineNumber": 66,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.cloneOnlyTokenMap",
        "lineNumber": 683,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.getMaxEndpointStateVersion",
        "lineNumber": 616,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.ArrivalWindow.add",
        "lineNumber": 494,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.applyNewStates",
        "lineNumber": 1593,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringComparator.compare",
        "lineNumber": 136,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "supra-linear": [
                "log(node * token)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSerializationHelper.serializedSize",
        "lineNumber": 76,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.CassandraVersion.compareIdentifiers",
        "lineNumber": 208,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.getLiveMembers",
        "lineNumber": 458,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSerializationHelper.deserialize",
        "lineNumber": 68,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAck2Serializer.serialize",
        "lineNumber": 53,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicationStrategy.getAddressReplicas",
        "lineNumber": 218,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "super-linear": [
                "node * token",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.RestorableMeter.tickIfNecessary",
        "lineNumber": 87,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "keyspace",
                "token",
                "table"
            ],
            "bursty": [
                "Burst(node, token)"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getAllRanges",
        "lineNumber": 4656,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "super-linear": [
                "node * token",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicationStrategy.getAddressReplicas",
        "lineNumber": 215,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "super-linear": [
                "node * token",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getLocalPrimaryRangeForEndpoint",
        "lineNumber": 4638,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "super-linear": [
                "token^2",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSerializationHelper.serialize",
        "lineNumber": 60,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ],
            "super-linear": [
                "datacenter^3"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.streaming.StreamManager.registerFollower",
        "lineNumber": 331,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(node, token)"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$LocalPool.tryGet",
        "lineNumber": 944,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(node, token)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table * row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.EndpointMessagingVersions.get",
        "lineNumber": 63,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(node, token)",
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.exponentialSearch",
        "lineNumber": 2038,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(node * token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.updateEndpointToHostIdMap",
        "lineNumber": 305,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(datacenter, token)"
            ],
            "linear": [
                "node"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir.rescale",
        "lineNumber": 388,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)",
                "Burst(node, token)",
                "Burst(datacenter, token)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.DiskBoundaryManager.getVersionedLocalRanges",
        "lineNumber": 93,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.streaming.StreamManager.lambda$registerFollower$1",
        "lineNumber": 329,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(node, token)"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.metrics.StreamingMetrics.get",
        "lineNumber": 71,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "linear": [
                "node"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Updater.updateRecursive",
        "lineNumber": 3476,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(datacenter, token)",
                "Burst(table)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.streaming.StreamManager.getReceivingStream",
        "lineNumber": 381,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(node, token)"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.FastByteOperations$UnsafeOperations.compareTo",
        "lineNumber": 400,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "token^2",
                "datacenter * token"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicaCollection$ReplicaMap.internalPutIfAbsent",
        "lineNumber": 361,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "token^2",
                "datacenter^3",
                "datacenter^2"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$LeafOrBranchBuilder.areIdentical",
        "lineNumber": 2468,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(table * row)"
            ],
            "bursty": [
                "Burst(node, token)",
                "Burst(table)",
                "Burst(table, row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.streaming.StreamManager$1.onRegister",
        "lineNumber": 241,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(node * token)",
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SystemKeyspace.updateSizeEstimates",
        "lineNumber": 1537,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir$AbstractSnapshot.count",
        "lineNumber": 501,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "large-linear": [
                "1055keyspace"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.firstKeyBeyond",
        "lineNumber": 1444,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2080,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2074,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2088,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2086,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir.bucketValue",
        "lineNumber": 348,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "large-linear": [
                "2111keyspace"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2082,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.commitlog.CommitLogSegment.coverInMap",
        "lineNumber": 553,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2090,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$GlobalTidy$1.run",
        "lineNumber": 2169,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.getNumberOfTables",
        "lineNumber": 293,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.lambda$getBackgroundCompactionTaskSubmitter$0",
        "lineNumber": 393,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.streamhist.StreamingTombstoneHistogramBuilder$DataHolder.addValue",
        "lineNumber": 214,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.QueryProcessor.makeInternalOptionsWithNowInSec",
        "lineNumber": 398,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.ImmediateExecutor.execute",
        "lineNumber": 140,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.snapshot",
        "lineNumber": 243,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.KeyspaceMetadata.tablesAndViews",
        "lineNumber": 149,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.snapshotExists",
        "lineNumber": 297,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.CBUtil.writeValue",
        "lineNumber": 473,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.run",
        "lineNumber": 107,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.computeSizeEstimates",
        "lineNumber": 124,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.takeSnapshot",
        "lineNumber": 4093,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.takeSnapshot",
        "lineNumber": 4101,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.computeSizeEstimates",
        "lineNumber": 134,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.computeSizeEstimates",
        "lineNumber": 126,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.run",
        "lineNumber": 93,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager.submitBackground",
        "lineNumber": 214,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.lambda$getNumberOfTables$2",
        "lineNumber": 293,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.executeInternalWithoutCondition",
        "lineNumber": 674,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "log(token)",
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.streamhist.StreamingTombstoneHistogramBuilder$DataHolder.forEach",
        "lineNumber": 334,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SystemKeyspace.updateTableEstimates",
        "lineNumber": 1563,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "row",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.snapshotWithoutMemtable",
        "lineNumber": 2019,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.memtable.SkipListMemtable.getFlushSet",
        "lineNumber": 268,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.Flusher.poll",
        "lineNumber": 136,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(table, row)",
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getKeyspaces",
        "lineNumber": 5702,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.run",
        "lineNumber": 105,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.AbstractWriteResponseHandler.signal",
        "lineNumber": 266,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.applyInternal",
        "lineNumber": 657,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.applyInternal",
        "lineNumber": 668,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPExecutor.takeTaskPermit",
        "lineNumber": 160,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.applyInternal",
        "lineNumber": 537,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.applyInternal",
        "lineNumber": 535,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper$GossipTask.run",
        "lineNumber": 306,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.applyInternal",
        "lineNumber": 656,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.commitlog.AbstractCommitLogService$SyncRunnable.run",
        "lineNumber": 214,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0081keyspace",
                "log(row)"
            ],
            "bursty": [
                "Burst(node, token)",
                "Burst(datacenter, token)"
            ],
            "linear": [
                "datacenter",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.updateScores",
        "lineNumber": 288,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0052keyspace",
                "log(row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.updateScores",
        "lineNumber": 296,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0052keyspace",
                "log(row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.updateScores",
        "lineNumber": 303,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0052keyspace",
                "log(row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.wrapBatchResponseHandler",
        "lineNumber": 1376,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.vint.VIntCoding.readUnsignedVInt",
        "lineNumber": 86,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cache.InstrumentingCache.get",
        "lineNumber": 61,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.fetchRows",
        "lineNumber": 2036,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table * row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.reads.range.RangeCommandIterator.close",
        "lineNumber": 273,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(table * row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cache.InstrumentingCache.get",
        "lineNumber": 58,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.readRegular",
        "lineNumber": 1973,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table * row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.MessagingMetrics.resetAndConsumeDroppedErrors",
        "lineNumber": 198,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter",
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.AsyncFuture.trySet",
        "lineNumber": 100,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager$BackgroundCompactionCandidate.run",
        "lineNumber": 317,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getNextBackgroundTask",
        "lineNumber": 216,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getNextBackgroundTask",
        "lineNumber": 210,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 320,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.FastByteOperations$UnsafeOperations.compareTo",
        "lineNumber": 386,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 266,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "token^2",
                "datacenter * token"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 313,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 263,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.SetSerializer.serializeValues",
        "lineNumber": 62,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SystemKeyspace.tokensAsSet",
        "lineNumber": 877,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow$Builder$CellResolver.resolve",
        "lineNumber": 759,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "row"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow$Builder.addCell",
        "lineNumber": 890,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.calculatePendingRanges",
        "lineNumber": 982,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.sort",
        "lineNumber": 1698,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "row"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.TypeSizes.encodedUTF8Length",
        "lineNumber": 51,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.accumulateLeaf",
        "lineNumber": 1835,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.transformLeaf",
        "lineNumber": 1303,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serializedSize",
        "lineNumber": 291,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token",
                "datacenter",
                "table",
                "row"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.resolve",
        "lineNumber": 1729,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.TokenSerializer.deserialize",
        "lineNumber": 53,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.addBootstrapTokens",
        "lineNumber": 380,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.addBootstrapTokens",
        "lineNumber": 374,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.SetSerializer.deserializeForNativeProtocol",
        "lineNumber": 111,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 215,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "row",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 211,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.CollectionSerializer.pack",
        "lineNumber": 77,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.addBootstrapTokens",
        "lineNumber": 387,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.CollectionSerializer.pack",
        "lineNumber": 82,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow$Builder$CellResolver.resolve",
        "lineNumber": 779,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.updateTokenMetadata",
        "lineNumber": 2878,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.dataSize",
        "lineNumber": 131,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 214,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "row",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.updateTokenMetadata",
        "lineNumber": 2872,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serializedSize",
        "lineNumber": 294,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "row",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.BiMultiValMap.removeValue",
        "lineNumber": 127,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.sizeOfComplexColumn",
        "lineNumber": 376,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.updateNormalTokens",
        "lineNumber": 227,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.unsharedHeapSizeExcludingData",
        "lineNumber": 147,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.CellPath.dataSize",
        "lineNumber": 53,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table",
                "row"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.Sets$Value.fromSerialized",
        "lineNumber": 220,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 230,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.writeComplexColumn",
        "lineNumber": 274,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.SetSerializer.serializeValues",
        "lineNumber": 60,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serializedSize",
        "lineNumber": 295,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "row"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.ObjectSizes.sizeOnHeapExcludingData",
        "lineNumber": 139,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.ByteBufferCloner.clone",
        "lineNumber": 74,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$AbstractUpdater.clearBranchBuffer",
        "lineNumber": 3372,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node * token)",
                "log(datacenter * token)",
                "log(table)",
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.sizesToSizeMap",
        "lineNumber": 1995,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node * token)",
                "log(datacenter * token)",
                "log(table)",
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.StreamingMetrics.get",
        "lineNumber": 67,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node * token)",
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.metrics.StreamingMetrics.get",
        "lineNumber": 62,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node * token)",
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$BranchBuilder.copySizeMapToSizes",
        "lineNumber": 3224,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(token)",
                "log(datacenter * token)",
                "log(table)",
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.Refs.tryRef",
        "lineNumber": 210,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.orIn",
        "lineNumber": 205,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionTask.getPendingRepair",
        "lineNumber": 324,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.LeveledManifest.getEstimatedTasks",
        "lineNumber": 630,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.groupSSTables",
        "lineNumber": 713,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionTask.getMaxDataAge",
        "lineNumber": 427,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.AbstractCompactionStrategy.filterSuspectSSTables",
        "lineNumber": 223,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LifecycleTransaction.toUpdate",
        "lineNumber": 432,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getHolderIndex",
        "lineNumber": 654,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.MetadataSerializer.deserialize",
        "lineNumber": 182,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.Throwables.perform",
        "lineNumber": 139,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.getApproximateKeyCount",
        "lineNumber": 260,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.Ref$GlobalState.release",
        "lineNumber": 336,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.util.MmappedRegions.updateState",
        "lineNumber": 161,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.compress.CompressionMetadata$Writer.doPrepare",
        "lineNumber": 407,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LogFile.maybeCreateReplica",
        "lineNumber": 352,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LogFile.getFileName",
        "lineNumber": 499,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LogRecord.make",
        "lineNumber": 163,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.select",
        "lineNumber": 238,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.MetadataSerializer.deserialize",
        "lineNumber": 160,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SerializationHeader.orderByDescendingGeneration",
        "lineNumber": 107,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.getOverlappingLiveSSTables",
        "lineNumber": 1541,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionTask.getMinRepairedAt",
        "lineNumber": 310,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTable.getAllFilePaths",
        "lineNumber": 194,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.MetadataCollector.makeList",
        "lineNumber": 311,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.prepareForObsoletion",
        "lineNumber": 132,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionTask.getIsTransient",
        "lineNumber": 342,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.getTotalBytes",
        "lineNumber": 685,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LogRecord.make",
        "lineNumber": 194,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LogRecord.make",
        "lineNumber": 195,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTable.bytesOnDisk",
        "lineNumber": 304,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.MetadataSerializer.deserialize",
        "lineNumber": 171,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.Memory.checkBounds",
        "lineNumber": 344,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LogFile.makeRecords",
        "lineNumber": 326,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.identityMap",
        "lineNumber": 173,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LifecycleTransaction.obsoleteOriginals",
        "lineNumber": 424,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.addLocalApplicationStates",
        "lineNumber": 2070,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.accumulate",
        "lineNumber": 1878,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.lambda$updateCoordinatorWriteLatencyTableMetric$11",
        "lineNumber": 1243,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.transform",
        "lineNumber": 1257,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.validate",
        "lineNumber": 274,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$Chunk.get",
        "lineNumber": 1410,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicaCollection.filter",
        "lineNumber": 542,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager$ReplayingBatch.addMutation",
        "lineNumber": 411,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.LeafBTreeSearchIterator.next",
        "lineNumber": 62,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "row",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 250,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ReadCommand$1MetricRecording.applyToRow",
        "lineNumber": 523,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.messages.BatchMessage.execute",
        "lineNumber": 216,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager.store",
        "lineNumber": 143,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 277,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.ListType.serializedValues",
        "lineNumber": 218,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 251,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SingleTableUpdatesCollector.toMutations",
        "lineNumber": 98,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.getMutations",
        "lineNumber": 281,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$MutationSerializer.serializedSize",
        "lineNumber": 434,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Row$Merger$ColumnDataReducer.getReduced",
        "lineNumber": 869,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.messages.BatchMessage.execute",
        "lineNumber": 182,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.buildPartitionKeyNames",
        "lineNumber": 362,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.addUpdates",
        "lineNumber": 783,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 252,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 256,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation.smallestGCGS",
        "lineNumber": 264,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicaCollection.filter",
        "lineNumber": 512,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicaCollection.filter",
        "lineNumber": 540,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.validate",
        "lineNumber": 273,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.RegularAndStaticColumns$Builder.addAll",
        "lineNumber": 186,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir.findIndex",
        "lineNumber": 278,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.triggers.TriggerExecutor.execute",
        "lineNumber": 118,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.validate",
        "lineNumber": 277,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.validate",
        "lineNumber": 259,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serializedSize",
        "lineNumber": 308,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.AbstractTimeUUIDType.compareCustom",
        "lineNumber": 49,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$LocalPool.tryGet",
        "lineNumber": 937,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 254,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.getMutations",
        "lineNumber": 290,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.validate",
        "lineNumber": 272,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow.minDeletionTime",
        "lineNumber": 183,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.buildPerfectDenseWithoutSizeTracking",
        "lineNumber": 304,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.verifyBatchSize",
        "lineNumber": 344,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager$ReplayingBatch.gcgs",
        "lineNumber": 515,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.EstimatedHistogram.percentile",
        "lineNumber": 222,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "bursty": [
                "Burst(table)",
                "Burst(table, row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$MutationSerializer.serialize",
        "lineNumber": 401,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ReservedKeywords.isReserved",
        "lineNumber": 61,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.updateCoordinatorWriteLatencyTableMetric",
        "lineNumber": 1243,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.ListSerializer.deserializeForNativeProtocol",
        "lineNumber": 104,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 253,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 265,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicationStrategy$ReplicaCache.get",
        "lineNumber": 472,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.firstTokenIndex",
        "lineNumber": 1181,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.EncodingStats$Collector.get",
        "lineNumber": 247,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.getMutations",
        "lineNumber": 300,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.messages.BatchMessage.execute",
        "lineNumber": 211,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.CQLMessageHandler$LargeMessage.assembleFrame",
        "lineNumber": 670,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.GCInspector.handleNotification",
        "lineNumber": 288,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.readComplexColumn",
        "lineNumber": 666,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 243,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager$ReplayingBatch.sendReplays",
        "lineNumber": 454,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.verifyBatchSize",
        "lineNumber": 342,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.validate",
        "lineNumber": 278,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.getMutations",
        "lineNumber": 289,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.validate",
        "lineNumber": 194,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.getMeanPartitionSize",
        "lineNumber": 2929,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.messages.BatchMessage$1.decode",
        "lineNumber": 61,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.EncodingStats$Collector.get",
        "lineNumber": 248,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ConsistencyLevel.blockForWrite",
        "lineNumber": 176,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager$ReplayingBatch.writeHintsForUndeliveredEndpoints",
        "lineNumber": 428,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.validate",
        "lineNumber": 276,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.compress.CompressedSequentialWriter.flushData",
        "lineNumber": 198,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$MutationSerializer.deserialize",
        "lineNumber": 410,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.GCInspector.handleNotification",
        "lineNumber": 271,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.AbstractTimeUUIDType.compareCustom",
        "lineNumber": 64,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SimpleBuilders$RowBuilder.add",
        "lineNumber": 394,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager$ReplayingBatch.addMutations",
        "lineNumber": 394,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.CBUtil.readString",
        "lineNumber": 114,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.authorize",
        "lineNumber": 168,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.GCInspector.handleNotification",
        "lineNumber": 295,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.ReplicaPlans.assureSufficientLiveReplicas",
        "lineNumber": 163,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.buildMaximallyDense",
        "lineNumber": 250,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.AbstractTimeUUIDType.compareCustom",
        "lineNumber": 66,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "row",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.CBUtil.readLongString",
        "lineNumber": 177,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.LeafBTreeSearchIterator.rewind",
        "lineNumber": 53,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.authorize",
        "lineNumber": 256,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.CQLMessageHandler$LargeMessage.assembleFrame",
        "lineNumber": 668,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.messages.BatchMessage.execute",
        "lineNumber": 199,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.TimeUUID.toBytes",
        "lineNumber": 172,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "row",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.TimeUUID.toBytes",
        "lineNumber": 169,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "row",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.messages.BatchMessage$1.decode",
        "lineNumber": 63,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Updater.updateRecursive",
        "lineNumber": 3545,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Updater.updateRecursive",
        "lineNumber": 3529,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.replace",
        "lineNumber": 62,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.hasNext",
        "lineNumber": 140,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionController.getPurgeEvaluator",
        "lineNumber": 264,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionIterator$GarbageSkipper.applyToPartition",
        "lineNumber": 570,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.View.select",
        "lineNumber": 146,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.Refs.release",
        "lineNumber": 237,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MurmurHash.hash3_x64_128",
        "lineNumber": 191,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.View$3.apply",
        "lineNumber": 268,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.ActiveCompactions.finishCompaction",
        "lineNumber": 49,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.OpOrder$Group.unlink",
        "lineNumber": 291,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.removeEndpoint",
        "lineNumber": 646,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.MigrationCoordinator.pullUnreceivedSchemaVersions",
        "lineNumber": 264,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.getTableMetadata",
        "lineNumber": 426,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.SimpleStrategy.calculateNaturalReplicas",
        "lineNumber": 76,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.OpOrder$Group.unlink",
        "lineNumber": 306,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.getTableMetadata",
        "lineNumber": 424,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MonotonicClock$AbstractEpochSamplingClock.updateAlmostSameTime",
        "lineNumber": 217,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 289,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MonotonicClock$AbstractEpochSamplingClock.updateAlmostSameTime",
        "lineNumber": 225,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "datacenter",
                "table"
            ],
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.getQuery",
        "lineNumber": 311,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ],
            "supra-linear": [
                "log(row)",
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.RecomputingSupplier.doWork",
        "lineNumber": 94,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager.setRate",
        "lineNumber": 240,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ],
            "supra-linear": [
                "log(row)",
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.evictFromMembership",
        "lineNumber": 635,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.isShutdown",
        "lineNumber": 522,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnection$EventLoopDelivery.doRun",
        "lineNumber": 815,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.lambda$convict$1",
        "lineNumber": 570,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.PendingRangeCalculatorService.lambda$new$1",
        "lineNumber": 57,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnection$EventLoopDelivery.doRun",
        "lineNumber": 786,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.markDead",
        "lineNumber": 1371,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.isRowCacheEnabled",
        "lineNumber": 3048,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnections$UnusedConnectionMonitor.closeUnusedSinceLastRun",
        "lineNumber": 300,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnections$UnusedConnectionMonitor.closeUnusedSinceLastRun",
        "lineNumber": 302,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.EndpointMessagingVersions.reset",
        "lineNumber": 54,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.PrunableArrayQueue.prune",
        "lineNumber": 118,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 285,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Tables.containsTable",
        "lineNumber": 133,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.prepare",
        "lineNumber": 540,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.serialize",
        "lineNumber": 168,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Tables.filter",
        "lineNumber": 139,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.skipNext",
        "lineNumber": 628,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.TableMetadata.compareColumns",
        "lineNumber": 652,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.prepare",
        "lineNumber": 539,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.compareNextTo",
        "lineNumber": 558,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.Tables.getNullable",
        "lineNumber": 128,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.skipNext",
        "lineNumber": 632,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.prepare",
        "lineNumber": 541,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.syncWriteBatchedMutations",
        "lineNumber": 1318,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.syncWriteBatchedMutations",
        "lineNumber": 1311,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.execute",
        "lineNumber": 418,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.Replicas.temporaryAssertFull",
        "lineNumber": 135,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPExecutor.takeTaskPermit",
        "lineNumber": 165,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.sendToHintedReplicas",
        "lineNumber": 1460,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.sendToHintedReplicas",
        "lineNumber": 1523,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.buildMaximallyDense",
        "lineNumber": 220,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.mutateAtomically",
        "lineNumber": 1181,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.run",
        "lineNumber": 130,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.lambda$filter$1",
        "lineNumber": 195,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.lambda$filter$1",
        "lineNumber": 193,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.lambda$filter$1",
        "lineNumber": 196,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.lambda$filter$1",
        "lineNumber": 197,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$AbstractTransformer.apply",
        "lineNumber": 3727,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.Envelope.release",
        "lineNumber": 73,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ],
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cache.InstrumentingCache.get",
        "lineNumber": 63,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.metrics.ClientMetrics.markRequestDispatched",
        "lineNumber": 72,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPExecutor.takeWorkPermit",
        "lineNumber": 178,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$AbstractUpdater.clearLeafBuffer",
        "lineNumber": 3356,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table, row)",
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.hasNext",
        "lineNumber": 147,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnIndex.add",
        "lineNumber": 264,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnIndex.add",
        "lineNumber": 258,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionTask.runMayThrow",
        "lineNumber": 152,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionTask.runMayThrow",
        "lineNumber": 242,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Directories.snapshotExists",
        "lineNumber": 1085,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0792table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.snapshotWithoutMemtable",
        "lineNumber": 2015,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0792table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnIndex.buildRowIndex",
        "lineNumber": 118,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.AbstractArrayClusteringPrefix.getBufferArray",
        "lineNumber": 44,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.getValidColumnFamilies",
        "lineNumber": 703,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0792table"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.forceKeyspaceCompaction",
        "lineNumber": 3920,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0792table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.CompactionParams.equals",
        "lineNumber": 338,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.repair.PendingAntiCompaction.run",
        "lineNumber": 366,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.cleanup",
        "lineNumber": 442,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getEstimatedRemainingTasks",
        "lineNumber": 1021,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.ActiveRepairService$ParentRepairSession.getTableIds",
        "lineNumber": 885,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.metrics.CompactionMetrics$1.getValue",
        "lineNumber": 77,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.Schema.getTableMetadata",
        "lineNumber": 435,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTrees.tryMoveOffHeap",
        "lineNumber": 376,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.repair.PendingAntiCompaction$AcquisitionCallback.apply",
        "lineNumber": 293,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.maybeUpdateRepairedState",
        "lineNumber": 221,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.forceFlush",
        "lineNumber": 1024,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.ActiveRepairService.prepareForRepair",
        "lineNumber": 624,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.TableMetrics$TableTimer$Context.close",
        "lineNumber": 1311,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PartitionUpdate$PartitionUpdateSerializer.deserialize",
        "lineNumber": 679,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.ColumnMetadata.comparisonOrder",
        "lineNumber": 101,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Sets$DelayedValue.bind",
        "lineNumber": 276,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.messages.PrepareMessage$1.serialize",
        "lineNumber": 95,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.FutureCombiner.lambda$successfulOf$6",
        "lineNumber": 259,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.Sets$Literal.prepare",
        "lineNumber": 148,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairRunnable.runMayThrow",
        "lineNumber": 267,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.CQLTypeParser.parse",
        "lineNumber": 45,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaKeyspace.createTableParamsFromRow",
        "lineNumber": 974,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.Sets$Literal.validateAssignableTo",
        "lineNumber": 179,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.dht.Murmur3Partitioner.midpoint",
        "lineNumber": 99,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.getRepairedState",
        "lineNumber": 209,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairRunnable.prepare",
        "lineNumber": 401,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.SystemDistributedKeyspace.startParentRepair",
        "lineNumber": 183,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.assign",
        "lineNumber": 184,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.FutureCombiner.lambda$allOf$4",
        "lineNumber": 241,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.SystemDistributedKeyspace.startRepairs",
        "lineNumber": 251,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.SystemDistributedKeyspace.startRepairs",
        "lineNumber": 249,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.messages.PrepareMessage$1.serializedSize",
        "lineNumber": 134,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 227,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.RepairedState.addAll",
        "lineNumber": 234,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.getRepairedState",
        "lineNumber": 207,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.setLiteral",
        "lineNumber": 12857,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTree$OffHeapInner.deserializeWithoutIdent",
        "lineNumber": 1433,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.ActiveRepairService.register",
        "lineNumber": 1093,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.ActiveRepairService.register",
        "lineNumber": 1083,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.repair.PendingAntiCompaction$AcquisitionCallback.apply",
        "lineNumber": 314,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.Validator.run",
        "lineNumber": 254,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.repair.Validator.add",
        "lineNumber": 180,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.ActiveRepairService$ParentRepairSession.getColumnFamilyStores",
        "lineNumber": 875,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTree.histogramOfRowSizePerLeaf",
        "lineNumber": 467,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.Batch$Serializer.readEncodedMutations",
        "lineNumber": 156,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.WaitQueue$Standard.register",
        "lineNumber": 182,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.Validator.add",
        "lineNumber": 178,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.dht.Range.normalize",
        "lineNumber": 466,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.setLiteral",
        "lineNumber": 12851,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.ValidationManager.doValidation",
        "lineNumber": 129,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.NamedThreadFactory.setupThread",
        "lineNumber": 172,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTree$OnHeapInner.serializeOffHeap",
        "lineNumber": 1332,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.putSession",
        "lineNumber": 651,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.assign",
        "lineNumber": 197,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.ColumnIdentifier.prefixComparison",
        "lineNumber": 95,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.putSession",
        "lineNumber": 649,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTree.histogramOfRowCountPerLeaf",
        "lineNumber": 477,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.RepairedState.addAll",
        "lineNumber": 232,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.UUIDGen.decompose",
        "lineNumber": 51,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairSession.start",
        "lineNumber": 318,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.tableIdToUuid",
        "lineNumber": 152,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairRunnable.complete",
        "lineNumber": 241,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.SetType.getInstance",
        "lineNumber": 55,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.sessionCompleted",
        "lineNumber": 941,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.transformAndFilterLeaf",
        "lineNumber": 1074,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaKeyspace.fetchTables",
        "lineNumber": 901,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPExecutor.addTask",
        "lineNumber": 112,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.memtable.Flushing$FlushRunnable.writeSortedContents",
        "lineNumber": 149,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.Crc.crc24",
        "lineNumber": 122,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableWriter.beforeAppend",
        "lineNumber": 176,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.UUIDType.compareCustom",
        "lineNumber": 63,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.Verb.fromId",
        "lineNumber": 458,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.vint.VIntCoding.getUnsignedVInt",
        "lineNumber": 135,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.AbstractBTreePartition.sliceIterator",
        "lineNumber": 204,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableReader.getPosition",
        "lineNumber": 162,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table, row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.Message$Serializer.extractParams",
        "lineNumber": 1277,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.Message$Serializer.inferMessageSize",
        "lineNumber": 732,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.Crc.crc24",
        "lineNumber": 127,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundConnection$Delivery.run",
        "lineNumber": 677,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.MerkleTrees$MerkleTreesSerializer.deserialize",
        "lineNumber": 414,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.FrameDecoder.deliver",
        "lineNumber": 327,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.add",
        "lineNumber": 1532,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.EstimatedHistogram.log",
        "lineNumber": 321,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.FrameDecoderCrc.unpackFrame",
        "lineNumber": 139,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.transformAndFilterLeaf",
        "lineNumber": 1087,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.FrameDecoderWith8bHeader.decode",
        "lineNumber": 111,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.repair.RepairJobDesc$RepairJobDescSerializer.deserialize",
        "lineNumber": 144,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.EstimatedHistogram.log",
        "lineNumber": 329,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table * row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.getRepairedState",
        "lineNumber": 200,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.repair.consistent.LocalSessions.getRepairedState",
        "lineNumber": 213,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.ActiveRepairService.recordRepairStatus",
        "lineNumber": 465,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.dht.Murmur3Partitioner.midpoint",
        "lineNumber": 85,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    }
]