[
    {
        "methodName": "org.apache.cassandra.config.Schema.getKeyspaces",
        "lineNumber": 372,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore$2.run",
        "lineNumber": 327,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.updateScores",
        "lineNumber": 321,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getPrimaryRangesForEndpoint",
        "lineNumber": 3627,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "node"
            ],
            "super-linear": [
                "token^2"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.AbstractCompactionStrategy$ScannerList.getTotalBytesScanned",
        "lineNumber": 345,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTableRewriter.append",
        "lineNumber": 138,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(row)",
                "Burst(table)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.config.Schema.getKeyspaceInstance",
        "lineNumber": 133,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "keyspace^3"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Server$ConnectionTracker.send",
        "lineNumber": 266,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cache.ConcurrentLinkedHashCache.remove",
        "lineNumber": 116,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.CompactionMetadata$CompactionMetadataSerializer.serializedSize",
        "lineNumber": 82,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.Memory.checkBounds",
        "lineNumber": 345,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cache.ConcurrentLinkedHashCache.put",
        "lineNumber": 101,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.getApproximateKeyCount",
        "lineNumber": 279,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionTask.runMayThrow",
        "lineNumber": 205,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BasePartitions.hasNext",
        "lineNumber": 87,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "0.0978table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.util.BufferedDataOutputStreamPlus.writeBoolean",
        "lineNumber": 204,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.runOnClose",
        "lineNumber": 87,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTableRewriter$InvalidateKeys.run",
        "lineNumber": 291,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.CompactionMetadata$CompactionMetadataSerializer.deserialize",
        "lineNumber": 102,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.serialize",
        "lineNumber": 123,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionTask.runMayThrow",
        "lineNumber": 196,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.serialize",
        "lineNumber": 116,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.config.Schema.getKSMetaData",
        "lineNumber": 294,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.config.Schema.setKeyspaceMetadata",
        "lineNumber": 385,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.CompactionMetadata$CompactionMetadataSerializer.serialize",
        "lineNumber": 92,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.run",
        "lineNumber": 72,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.process",
        "lineNumber": 787,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaKeyspace.calculateSchemaDigest",
        "lineNumber": 338,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTableRewriter.moveStarts",
        "lineNumber": 235,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.config.Schema.storeKeyspaceInstance",
        "lineNumber": 209,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.serialize",
        "lineNumber": 100,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.config.Schema.storeKeyspaceInstance",
        "lineNumber": 206,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BasePartitions.hasNext",
        "lineNumber": 92,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.processPartition",
        "lineNumber": 827,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.serialize",
        "lineNumber": 115,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.config.SchemaConstants.isLocalSystemKeyspace",
        "lineNumber": 72,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.UnfilteredPartitionIterators$Serializer.serialize",
        "lineNumber": 303,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.selfAssign",
        "lineNumber": 188,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^3",
                "token^3",
                "table^2",
                "datacenter^2 * token"
            ],
            "bursty": [
                "Burst(row)",
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.doWaitSpin",
        "lineNumber": 233,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^3",
                "token^3",
                "datacenter * token^2",
                "table^2",
                "datacenter^3"
            ],
            "bursty": [
                "Burst(row)",
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.concurrent.NamedThreadFactory.lambda$threadLocalDeallocator$0",
        "lineNumber": 81,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^3"
            ],
            "supra-linear": [
                "log(node)",
                "0.0177keyspace",
                "log(table)"
            ],
            "linear": [
                "row",
                "token",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.Message$Dispatcher$Flusher.run",
        "lineNumber": 464,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "0.0508keyspace",
                "log(row)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.Ref$GlobalState.release",
        "lineNumber": 314,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)",
                "Burst(table)",
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "0.0791table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.all",
        "lineNumber": 2099,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.config.Schema.getNonLocalStrategyKeyspaces",
        "lineNumber": 320,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.concurrent.AbstractLocalAwareExecutorService$FutureTask.run",
        "lineNumber": 162,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.metrics.CompactionMetrics$1.getValue",
        "lineNumber": 66,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.metrics.ThreadPoolMetrics.getJmxThreadPools",
        "lineNumber": 151,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.updateScores",
        "lineNumber": 319,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy$RangeCommandIterator.close",
        "lineNumber": 2261,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cache.ChunkCache.load",
        "lineNumber": 153,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.updateScores",
        "lineNumber": 326,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.metrics.CompactionMetrics.finishCompaction",
        "lineNumber": 151,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy.readRegular",
        "lineNumber": 1716,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cache.ChunkCache.load",
        "lineNumber": 160,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.updateScores",
        "lineNumber": 328,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.MergeIterator$ManyToOne.replaceAndSink",
        "lineNumber": 259,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.RowIterators.digest",
        "lineNumber": 51,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0980keyspace"
            ],
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BasePartitions.hasNext",
        "lineNumber": 95,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "large-linear": [
                "253keyspace",
                "370keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.PendingRangeCalculatorService$PendingRangeTask.run",
        "lineNumber": 66,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.streaming.StreamManager.registerReceiving",
        "lineNumber": 151,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.MessagingService.getRawVersion",
        "lineNumber": 1151,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(token)",
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.streaming.StreamManager$3.run",
        "lineNumber": 147,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)"
            ],
            "bursty": [
                "Burst(node, token)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.calculatePendingRanges",
        "lineNumber": 901,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.streaming.StreamManager.getReceivingStream",
        "lineNumber": 156,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)"
            ],
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.MessagingService.knowsVersion",
        "lineNumber": 1159,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(token)",
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 322,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)"
            ],
            "super-linear": [
                "node^2"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.getPrimaryRangesFor",
        "lineNumber": 729,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "node * token",
                "datacenter * token"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.SimpleStrategy.calculateNaturalEndpoints",
        "lineNumber": 56,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "token^2",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.SortedBiMultiValMap.create",
        "lineNumber": 60,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "node * token",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.getAllEndpoints",
        "lineNumber": 994,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "linear": [
                "token"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicationStrategy.getAddressRanges",
        "lineNumber": 175,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "token^2"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.MessagingService.getConnectionPool",
        "lineNumber": 788,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAck2Serializer.deserialize",
        "lineNumber": 70,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.getMaxEndpointStateVersion",
        "lineNumber": 389,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "supra-linear": [
                "log(token)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.RebufferingInputStream.read",
        "lineNumber": 82,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAckSerializer.deserialize",
        "lineNumber": 80,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSynVerbHandler.doSort",
        "lineNumber": 151,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.ArrivalWindow.add",
        "lineNumber": 447,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.cloneOnlyTokenMap",
        "lineNumber": 622,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token",
                "datacenter"
            ],
            "supra-linear": [
                "log(token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAckVerbHandler.doVerb",
        "lineNumber": 83,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.makeRandomGossipDigest",
        "lineNumber": 495,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSerializationHelper.deserialize",
        "lineNumber": 67,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.applyNewStates",
        "lineNumber": 1212,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.sendGossip",
        "lineNumber": 651,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.MessagingService.getConnectionPool",
        "lineNumber": 792,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSerializationHelper.serialize",
        "lineNumber": 59,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.MessagingService.setVersion",
        "lineNumber": 1086,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.getStateForVersionBiggerThan",
        "lineNumber": 910,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ],
            "supra-linear": [
                "log(token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSynVerbHandler.doSort",
        "lineNumber": 125,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.getStateForVersionBiggerThan",
        "lineNumber": 919,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ],
            "supra-linear": [
                "log(token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.EndpointStateSerializer.serialize",
        "lineNumber": 174,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ],
            "supra-linear": [
                "log(token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.notifyFailureDetector",
        "lineNumber": 945,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.examineGossiper",
        "lineNumber": 1267,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.MessagingService.getVersion",
        "lineNumber": 1130,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ],
            "super-linear": [
                "datacenter^2 * token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAck2Serializer.serialize",
        "lineNumber": 57,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSynVerbHandler.doSort",
        "lineNumber": 135,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAckSerializer.serialize",
        "lineNumber": 66,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.OpOrder$Group.unlink",
        "lineNumber": 257,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.OpOrder$Group.unlink",
        "lineNumber": 272,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SystemKeyspace.tokensAsSet",
        "lineNumber": 781,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "linear": [
                "node",
                "token"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.MessagingMetrics.addTimeTaken",
        "lineNumber": 56,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(node, token)"
            ],
            "linear": [
                "token",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.updateHostId",
        "lineNumber": 258,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(node, token)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 268,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir.rescale",
        "lineNumber": 276,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(node, token)",
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "token^2"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicationStrategy.getAddressRanges",
        "lineNumber": 178,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "token^2",
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.MessageDeliveryTask.run",
        "lineNumber": 84,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "node * token",
                "datacenter * token"
            ],
            "supra-linear": [
                "log(datacenter)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.MessageDeliveryTask.run",
        "lineNumber": 57,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "node * token",
                "datacenter * token"
            ],
            "supra-linear": [
                "log(datacenter)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.ExecutorLocals.set",
        "lineNumber": 79,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "token^2",
                "datacenter^2",
                "datacenter * token"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.recordSizeEstimates",
        "lineNumber": 94,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.AbstractBTreePartition.sliceIterator",
        "lineNumber": 191,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableWriter.append",
        "lineNumber": 166,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.takeSnapshot",
        "lineNumber": 3163,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Memtable$FlushRunnable.writeSortedContents",
        "lineNumber": 467,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.takeSnapshot",
        "lineNumber": 3168,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableWriter.beforeAppend",
        "lineNumber": 127,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.recordSizeEstimates",
        "lineNumber": 96,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.recordSizeEstimates",
        "lineNumber": 104,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.obs.OffHeapBitSet.serialize",
        "lineNumber": 115,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.run",
        "lineNumber": 76,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.lambda$waitForFlushes$0",
        "lineNumber": 970,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnIndex.buildRowIndex",
        "lineNumber": 110,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MurmurHash.hash3_x64_128",
        "lineNumber": 188,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.config.Schema.getCFMetaData",
        "lineNumber": 248,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.StreamingHistogram$StreamingHistogramBuilder.flushHistogram",
        "lineNumber": 211,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.StreamingHistogram$StreamingHistogramSerializer.serialize",
        "lineNumber": 286,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager.submitBackground",
        "lineNumber": 177,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore$2.run",
        "lineNumber": 328,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getNextBackgroundTask",
        "lineNumber": 120,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.snapshotExists",
        "lineNumber": 280,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.metrics.RestorableMeter.tickIfNecessary",
        "lineNumber": 87,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ],
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.thrift.ThriftValidation.validateKeyspace",
        "lineNumber": 83,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.snapshot",
        "lineNumber": 226,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.QueryProcessor.makeInternalOptions",
        "lineNumber": 288,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "datacenter"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager$BackgroundCompactionCandidate.run",
        "lineNumber": 272,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableReader.getPosition",
        "lineNumber": 210,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RowIndexEntry$Serializer.skipPromotedIndex",
        "lineNumber": 381,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir$EstimatedHistogramReservoirSnapshot.getValue",
        "lineNumber": 373,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)",
                "Burst(table)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPExecutor.takeWorkPermit",
        "lineNumber": 157,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "linear": [
                "table",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.firstKeyBeyond",
        "lineNumber": 1598,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.builder",
        "lineNumber": 782,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SinglePartitionReadCommand.queryMemtableAndSSTablesInTimestampOrder",
        "lineNumber": 969,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.WaitQueue.cleanUpCancelled",
        "lineNumber": 162,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.run",
        "lineNumber": 115,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet$Codec.encode",
        "lineNumber": 198,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0625keyspace",
                "0.0630table",
                "0.0643table",
                "0.0625table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet$Codec.encodedSize",
        "lineNumber": 210,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0625keyspace",
                "0.0630table",
                "0.0643table",
                "0.0625table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.processPartition",
        "lineNumber": 863,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0625keyspace",
                "0.0630table",
                "0.0610table",
                "0.0625table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet$Codec.encode",
        "lineNumber": 202,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0625keyspace",
                "0.0630table",
                "0.0643table",
                "0.0625table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet$Codec.encodedSize",
        "lineNumber": 212,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0625keyspace",
                "0.0630table",
                "0.0643table",
                "0.0625table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.processPartition",
        "lineNumber": 858,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0625keyspace",
                "0.0630table",
                "0.0605table",
                "0.0625table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper$GossipTask.run",
        "lineNumber": 156,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getValidKeyspace",
        "lineNumber": 3239,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getKeyspaces",
        "lineNumber": 4785,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.commitlog.CommitLogSegment.coverInMap",
        "lineNumber": 467,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cache.InstrumentingCache.get",
        "lineNumber": 59,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.FastByteOperations$UnsafeOperations.compareTo",
        "lineNumber": 348,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "node^2"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cache.InstrumentingCache.get",
        "lineNumber": 61,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.run",
        "lineNumber": 95,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(table)",
                "0.0497table"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.resolve",
        "lineNumber": 1088,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.handleStateNormal",
        "lineNumber": 2340,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 177,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.SetSerializer.deserializeForNativeProtocol",
        "lineNumber": 99,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow$Builder$CellResolver.resolve",
        "lineNumber": 646,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cells.reconcile",
        "lineNumber": 86,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.unsharedHeapSizeExcludingData",
        "lineNumber": 121,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cells.reconcileComplex",
        "lineNumber": 211,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.CollectionSerializer.pack",
        "lineNumber": 67,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cells.reconcile",
        "lineNumber": 83,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 181,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.CellPath.dataSize",
        "lineNumber": 52,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.handleStateNormal",
        "lineNumber": 2346,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 180,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.SetSerializer.serializeValues",
        "lineNumber": 55,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.TreeBuilder.build",
        "lineNumber": 135,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Sets$Value.fromSerialized",
        "lineNumber": 160,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.addBootstrapTokens",
        "lineNumber": 333,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cells.reconcile",
        "lineNumber": 82,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Rows.lambda$collectStats$0",
        "lineNumber": 110,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.addBootstrapTokens",
        "lineNumber": 339,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.ComplexColumnData.dataSize",
        "lineNumber": 112,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.TokenSerializer.deserialize",
        "lineNumber": 54,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.updateNormalTokens",
        "lineNumber": 176,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.writeComplexColumn",
        "lineNumber": 274,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.CollectionSerializer.pack",
        "lineNumber": 62,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.BiMultiValMap.removeValue",
        "lineNumber": 127,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 196,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.updateNormalTokens",
        "lineNumber": 209,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.BiMultiValMap.putAll",
        "lineNumber": 113,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter",
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.addBootstrapTokens",
        "lineNumber": 346,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow$Builder$CellResolver.resolve",
        "lineNumber": 627,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow$Builder.addCell",
        "lineNumber": 762,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 315,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.SetSerializer.serializeValues",
        "lineNumber": 57,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.sort",
        "lineNumber": 1057,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 265,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.LatencyMetrics.addNano",
        "lineNumber": 119,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)"
            ],
            "supra-linear": [
                "log(row)",
                "log(datacenter * token)"
            ],
            "super-linear": [
                "datacenter^3"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.vint.VIntCoding.encodeVInt",
        "lineNumber": 136,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Rows.copy",
        "lineNumber": 46,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringComparator.compare",
        "lineNumber": 132,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node * token)",
                "log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.TimeUUIDType.compareCustom",
        "lineNumber": 65,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow.minDeletionTime",
        "lineNumber": 156,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Rows.copy",
        "lineNumber": 56,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PartitionUpdate.dataSize",
        "lineNumber": 377,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 209,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.firstTokenIndex",
        "lineNumber": 1037,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager$ReplayingBatch.addMutations",
        "lineNumber": 351,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.addUpdates",
        "lineNumber": 685,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.TimeUUIDType.compareCustom",
        "lineNumber": 67,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 217,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.triggers.TriggerExecutor.execute",
        "lineNumber": 117,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$MutationSerializer.deserialize",
        "lineNumber": 415,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 243,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicationStrategy.getCachedEndpoints",
        "lineNumber": 94,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$MutationSerializer.deserialize",
        "lineNumber": 401,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.AbstractWriteResponseHandler.assureSufficientLiveNodes",
        "lineNumber": 157,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.TimeUUIDType.compareCustom",
        "lineNumber": 56,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.TimeUUIDType.compareCustom",
        "lineNumber": 51,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.getMutations",
        "lineNumber": 225,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$MutationSerializer.serialize",
        "lineNumber": 391,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.getQuery",
        "lineNumber": 300,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.QueryProcessor.lambda$static$2",
        "lineNumber": 109,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.messages.BatchMessage.execute",
        "lineNumber": 203,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager$ReplayingBatch.sendSingleReplayMutation",
        "lineNumber": 426,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$MutationSerializer.serialize",
        "lineNumber": 379,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation.smallestGCGS",
        "lineNumber": 267,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager$ReplayingBatch.sendReplays",
        "lineNumber": 403,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cache.ChunkCache$CachingRebufferer.rebuffer",
        "lineNumber": 232,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 231,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Row$Merger$ColumnDataReducer.getReduced",
        "lineNumber": 796,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.readComplexColumn",
        "lineNumber": 668,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SimpleBuilders$RowBuilder.add",
        "lineNumber": 377,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.messages.BatchMessage.execute",
        "lineNumber": 177,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.UpdatesCollector.validateIndexedColumns",
        "lineNumber": 88,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ReadCommand$1MetricRecording.applyToRow",
        "lineNumber": 494,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.messages.BatchMessage.execute",
        "lineNumber": 192,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.ListType.serializedValues",
        "lineNumber": 200,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.messages.BatchMessage$1.decode",
        "lineNumber": 52,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.UpdatesCollector.validateIndexedColumns",
        "lineNumber": 89,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$MutationSerializer.deserialize",
        "lineNumber": 413,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager$ReplayingBatch.gcgs",
        "lineNumber": 457,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.checkAccess",
        "lineNumber": 137,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.FastByteOperations$UnsafeOperations.compareTo",
        "lineNumber": 362,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.assign",
        "lineNumber": 170,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$MutationSerializer.serialize",
        "lineNumber": 392,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.ensureRoom",
        "lineNumber": 367,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.verifyBatchSize",
        "lineNumber": 273,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 219,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.verifyBatchSize",
        "lineNumber": 275,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.verifyBatchSize",
        "lineNumber": 282,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.validate",
        "lineNumber": 236,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.addLocalApplicationStates",
        "lineNumber": 1515,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.assign",
        "lineNumber": 157,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 218,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 220,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.checkAccess",
        "lineNumber": 219,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PartitionUpdate.dataSize",
        "lineNumber": 380,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager.store",
        "lineNumber": 129,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.PartitionColumns$Builder.addAll",
        "lineNumber": 181,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.verifyBatchSize",
        "lineNumber": 284,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.validate",
        "lineNumber": 211,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 222,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.ListSerializer.deserializeForNativeProtocol",
        "lineNumber": 96,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 216,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager$ReplayingBatch.addMutation",
        "lineNumber": 368,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.BatchStatement.validate",
        "lineNumber": 160,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.validate",
        "lineNumber": 235,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.getMeanPartitionSize",
        "lineNumber": 2446,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.UUIDGen.createTimeUUIDBytes",
        "lineNumber": 273,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.UUIDGen.createTimeUUIDBytes",
        "lineNumber": 270,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.prepareForObsoletion",
        "lineNumber": 130,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.getApproximateKeyCount",
        "lineNumber": 259,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.Descriptor.appendFileName",
        "lineNumber": 147,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2182,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.Refs.release",
        "lineNumber": 237,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SerializationHeader.orderByDescendingGeneration",
        "lineNumber": 104,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2188,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2184,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.FastByteOperations$UnsafeOperations.copy",
        "lineNumber": 254,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.util.MmappedRegions.updateState",
        "lineNumber": 161,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.getNextBackgroundSSTables",
        "lineNumber": 96,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.orIn",
        "lineNumber": 218,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.compress.LZ4Compressor.compress",
        "lineNumber": 118,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.checkNotReplaced",
        "lineNumber": 105,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir$EstimatedHistogramReservoirSnapshot.getValue",
        "lineNumber": 383,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.MetadataSerializer.deserialize",
        "lineNumber": 112,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.select",
        "lineNumber": 251,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LifecycleTransaction.checkpoint",
        "lineNumber": 308,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.MergeIterator.close",
        "lineNumber": 54,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.setReplaced",
        "lineNumber": 86,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.getApproximateKeyCount",
        "lineNumber": 246,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LogFile.getFileName",
        "lineNumber": 443,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.identityMap",
        "lineNumber": 184,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cache.ChunkCache.invalidateFile",
        "lineNumber": 197,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionTask.getMinRepairedAt",
        "lineNumber": 315,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LogFile.makeRecord",
        "lineNumber": 314,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTable.getAllFilePaths",
        "lineNumber": 167,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.getOverlappingLiveSSTables",
        "lineNumber": 1412,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTable.bytesOnDisk",
        "lineNumber": 259,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2190,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LogRecord.make",
        "lineNumber": 199,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2176,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.scheduleFlush",
        "lineNumber": 317,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LifecycleTransaction.toUpdate",
        "lineNumber": 392,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.createSSTableAndLengthPairs",
        "lineNumber": 228,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionTask.getMaxDataAge",
        "lineNumber": 376,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$Chunk.get",
        "lineNumber": 765,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getScanners",
        "lineNumber": 608,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.compress.CompressionMetadata$Writer.doPrepare",
        "lineNumber": 393,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getScanners",
        "lineNumber": 616,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.EstimatedHistogram.percentile",
        "lineNumber": 205,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(table)"
            ],
            "supra-linear": [
                "0.0433table",
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.buildFromRange",
        "lineNumber": 400,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 2192,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SerializationHeader.orderByDescendingGeneration",
        "lineNumber": 107,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.createSSTableAndLengthPairs",
        "lineNumber": 229,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ],
            "supra-linear": [
                "log(token)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LifecycleTransaction.obsoleteOriginals",
        "lineNumber": 384,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.Throwables.perform",
        "lineNumber": 108,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.Refs.tryRef",
        "lineNumber": 210,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.update",
        "lineNumber": 150,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.update",
        "lineNumber": 127,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.TreeBuilder.update",
        "lineNumber": 86,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 291,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaKeyspace.fetchTables",
        "lineNumber": 981,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.CompressionParams.validate",
        "lineNumber": 430,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.skipNext",
        "lineNumber": 547,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.TableParams$Builder.extensions",
        "lineNumber": 391,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.CompactionParams.create",
        "lineNumber": 95,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.skipNext",
        "lineNumber": 543,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.prepare",
        "lineNumber": 455,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.compareNextTo",
        "lineNumber": 474,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.CachingParams.fromMap",
        "lineNumber": 99,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.prepare",
        "lineNumber": 457,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.KeyspaceMetadata.existingIndexNames",
        "lineNumber": 114,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.CompressionParams.copyOptions",
        "lineNumber": 279,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.serializers.MapSerializer.deserializeForNativeProtocol",
        "lineNumber": 112,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.Tables.diff",
        "lineNumber": 122,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.ColumnIdentifier.getInterned",
        "lineNumber": 147,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.CachingParams.fromMap",
        "lineNumber": 94,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.config.ColumnDefinition.comparisonOrder",
        "lineNumber": 103,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.config.CFMetaData.create",
        "lineNumber": 427,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.SetType.getInstance",
        "lineNumber": 54,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.CompactionParams.classFromName",
        "lineNumber": 254,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.MapType.getInstance",
        "lineNumber": 57,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.CompactionParams.equals",
        "lineNumber": 315,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cache.ConcurrentLinkedHashCache.get",
        "lineNumber": 96,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.CQLTypeParser.parse",
        "lineNumber": 45,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.prepare",
        "lineNumber": 456,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Message$Dispatcher$Flusher.run",
        "lineNumber": 451,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.AbstractRow.digest",
        "lineNumber": 72,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getEstimatedRemainingTasks",
        "lineNumber": 797,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getEstimatedRemainingTasks",
        "lineNumber": 795,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.CompactionMetrics$1.getValue",
        "lineNumber": 68,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.StatusLogger.log",
        "lineNumber": 99,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.snapshotWithoutFlush",
        "lineNumber": 1788,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.forceFlush",
        "lineNumber": 936,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0599table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.snapshotWithoutFlush",
        "lineNumber": 1783,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0599table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Directories.snapshotExists",
        "lineNumber": 860,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0599table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.hasNext",
        "lineNumber": 133,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.hasNext",
        "lineNumber": 128,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.hasNext",
        "lineNumber": 147,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnIndex.add",
        "lineNumber": 246,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.hasNext",
        "lineNumber": 152,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnIndex.add",
        "lineNumber": 252,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.monitoring.MonitoringTask.logSlowOperations",
        "lineNumber": 173,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.forceKeyspaceCompaction",
        "lineNumber": 3022,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0599table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.getValidColumnFamilies",
        "lineNumber": 661,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0599table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.autoEnforce",
        "lineNumber": 1069,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.View.select",
        "lineNumber": 146,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cache.ChunkCache$CachingRebufferer.rebuffer",
        "lineNumber": 236,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.View$3.apply",
        "lineNumber": 268,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundTcpConnection.run",
        "lineNumber": 231,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.replace",
        "lineNumber": 61,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.metrics.MessagingMetrics.addTimeTaken",
        "lineNumber": 57,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.executeInternalWithoutCondition",
        "lineNumber": 586,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.SimpleStrategy.calculateNaturalEndpoints",
        "lineNumber": 58,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.GCInspector.handleNotification",
        "lineNumber": 258,
        "dependencyType": "Loop",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.MessagingService.destroyConnectionPool",
        "lineNumber": 783,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.MessagingService.destroyConnectionPool",
        "lineNumber": 779,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.MessagingService.resetVersion",
        "lineNumber": 1098,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundTcpConnection.connect",
        "lineNumber": 545,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "token^3"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableScanner$KeyScanningIterator$1.initializeIterator",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "linear": [
                "keyspace",
                "table"
            ],
            "super-linear": [
                "keyspace^2",
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.runOnClose",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "linear": [
                "table",
                "datacenter"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.concurrent.DebuggableThreadPoolExecutor.logExceptionsAfterExecute",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "super-linear": [
                "node^2",
                "keyspace^2",
                "datacenter * token",
                "table^2"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.trimToThresholdWithHotness",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(node * token)",
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "keyspace",
                "table",
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.TreeCursor.seekTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "large-linear": [
                "160keyspace",
                "260keyspace"
            ],
            "super-linear": [
                "token^2",
                "datacenter^2",
                "table^2"
            ],
            "quasi-linear": [
                "datacenter * token * log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.getHotnessMap",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(node * token)",
                "log(row)",
                "log(datacenter * token)",
                "log(table)"
            ],
            "linear": [
                "keyspace",
                "table",
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableScanner.addRange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.RebufferingInputStream.skipBytes",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "keyspace"
            ],
            "super-linear": [
                "table^2",
                "datacenter^2"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIterators.merge",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "table"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.getBuckets",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "node",
                "keyspace",
                "token",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.Descriptor.appendFileName",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "super-linear": [
                "keyspace^2",
                "datacenter^2"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "node"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.View.select",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(node * token)",
                "log(row)"
            ],
            "bursty": [
                "Burst(node)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "keyspace",
                "table",
                "token"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getNextBackgroundTask",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(node)",
                "log(row)",
                "log(datacenter * token)"
            ],
            "linear": [
                "keyspace",
                "table"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager$CompactionExecutor.afterExecute",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(datacenter * token)",
                "log(table)"
            ],
            "linear": [
                "node",
                "keyspace",
                "token",
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.IntervalTree$IntervalNode.searchInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.stopSpinning",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0453keyspace",
                "log(keyspace)"
            ],
            "linear": [
                "table",
                "datacenter"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.AbstractCell.digest",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0326keyspace"
            ],
            "large-linear": [
                "172keyspace",
                "171table"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.Message$Dispatcher$Flusher.run",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0454keyspace",
                "log(keyspace)",
                "log(row)",
                "0.0491table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableScanner$KeyScanningIterator.computeNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0860keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "table",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.addValue",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "super-linear": [
                "table^2"
            ],
            "large-linear": [
                "206table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow.filter",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node, token)",
                "Burst(datacenter, token)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.SlabAllocator.allocate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "datacenter^2",
                "Burst(table)"
            ],
            "linear": [
                "node"
            ],
            "supra-linear": [
                "log(node * token)",
                "log(row)"
            ],
            "super-linear": [
                "table^2",
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.deserializeRowBody",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SharedExecutorPool.schedule",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node)",
                "Burst(node, token)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.AbstractBTreePartition.sliceIterator",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "datacenter",
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.config.ColumnDefinition$1.compare",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "super-linear": [
                "datacenter^2",
                "table^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Tracker.getMemtableFor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node)",
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.AbstractIterator.hasNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node, token)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "large-linear": [
                "157table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.EncodingStats$Collector.get",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node)",
                "Burst(node, token)",
                "Burst(table)"
            ],
            "linear": [
                "keyspace",
                "table",
                "token"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.Memory.checkBounds",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node, token)",
                "Burst(row)",
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "super-linear": [
                "table^2"
            ],
            "linear": [
                "table",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Lexer.mIDENT",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.applyInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node)"
            ],
            "linear": [
                "keyspace",
                "table",
                "token"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.updateScores",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "node^2"
            ],
            "supra-linear": [
                "log(keyspace)",
                "0.0167keyspace",
                "log(token)",
                "log(row)",
                "log(table)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.PartitionRangeReadCommand.queryStorage",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.deserializeOne",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.DataType.writeValue",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "token^2"
            ],
            "linear": [
                "row"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.getEstimatedCompactionsByTasks",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PartitionUpdate$PartitionUpdateSerializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "keyspace",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Columns$Serializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)"
            ],
            "linear": [
                "keyspace",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.AbstractBounds.bounds",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "linear": [
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.selector",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.WaitQueue.signalAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.getTotalBytes",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$MutationSerializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "linear": [
                "keyspace",
                "table",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet$Flag.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.Refs.release",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "token^2",
                "table^2"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.serializeRowBody",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "keyspace^2",
                "datacenter^2"
            ],
            "supra-linear": [
                "log(row)",
                "0.0320table",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Frame$Header$Flag.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.ClusteringColumnRestrictions.hasContains",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.AtomicBTreePartition.addAllWithSizeDelta",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringComparator.compare",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node)",
                "node^2",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)",
                "log(token)"
            ],
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.PartitionColumns$Builder.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.ProtocolVersion.decode",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.util.MmappedRegions$State.floor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "keyspace",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Lexer.mLETTER",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.RestrictionSet.addFunctionsTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.RowAndDeletionMergeIterator.computeNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.util.RandomAccessReader.seek",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)"
            ],
            "linear": [
                "keyspace",
                "datacenter"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ConsistencyLevel.blockFor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)"
            ],
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ColumnIdentifier.prefixComparison",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "keyspace^2"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.FileUtils.close",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.QueryOptions$Codec$Flag.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.DataType.serializedValueSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.MultiCBuilder$OneClusteringBuilder.addElementToAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "keyspace",
                "table",
                "datacenter"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Clustering$Serializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "datacenter^2"
            ],
            "supra-linear": [
                "log(row)",
                "log(datacenter * token)",
                "0.0280table",
                "log(table)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPExecutor.addTask",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node, token)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.filter.DataLimits$Counter.attachTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node, token)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.config.ColumnDefinition.hashCode",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "super-linear": [
                "table^2",
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.firstTokenIndex",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "node^2",
                "token^2"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Serializer.valuesWithoutSizeSerializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata$2.computeNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "node * token * log(node * token)",
                "datacenter * token * log(datacenter * token)"
            ],
            "super-linear": [
                "node^2",
                "datacenter^2 * token"
            ],
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Directories.getWriteableLocations",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(node)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(node * token)",
                "log(row)",
                "log(datacenter * token)",
                "log(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MergeIterator$Candidate.compareTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2",
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow$CellIterator.computeNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "large-linear": [
                "397keyspace"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "super-linear": [
                "token^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.SimpleStrategy.calculateNaturalEndpoints",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "node^2",
                "token^2"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.vint.VIntCoding.encodeVInt",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)"
            ],
            "super-linear": [
                "keyspace^2"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.MemtableAllocator$SubAllocator.allocate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)",
                "Burst(datacenter, token)"
            ],
            "linear": [
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.getNextBackgroundSSTables",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(datacenter * token)"
            ],
            "linear": [
                "token",
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Rows.lambda$collectStats$0",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(node)",
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "super-linear": [
                "table^2",
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.Pair.hashCode",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.MergeIterator$ManyToOne.replaceAndSink",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2",
                "datacenter^2"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.vint.VIntCoding.readUnsignedVInt",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.buildInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "bursty": [
                "Burst(row)"
            ],
            "supra-linear": [
                "log(datacenter)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.MetadataCollector$MinMaxLongTracker.update",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2",
                "datacenter^2"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(row)",
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.compareNextTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2",
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.getPredecessor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "node^2",
                "keyspace^2",
                "token^2",
                "table^2"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.MetadataCollector$MinMaxIntTracker.update",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "0.0667keyspace",
                "log(table)"
            ],
            "bursty": [
                "Burst(row)"
            ],
            "super-linear": [
                "table^2",
                "datacenter^2"
            ],
            "large-linear": [
                "222table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.selection.Selection$ResultSetBuilder.newRow",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MurmurHash.hash3_x64_128",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "bursty": [
                "Burst(node, token)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow.purge",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.TypeSizes.encodedUTF8Length",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "keyspace^2"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BasePartitions.hasNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "super-linear": [
                "keyspace^2",
                "datacenter^2"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.MurmurHash.hash2_64",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnIndex.addIndexBlock",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnIndex.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.columniterator.AbstractSSTableIterator.readStaticRow",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Slices$Builder.build",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.AbstractCompactionStrategy$ScannerList.getTotalBytesScanned",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIterators$UnfilteredRowMergeIterator.collectColumns",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.Bounds.contains",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "datacenter"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.IndexInfo$Serializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionIterator$GarbageSkipper.applyToPartition",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(row)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.deserializeHeader",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.AbstractRow.digest",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.writers.CompactionAwareWriter.maybeSwitchWriter",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager.compactionRateLimiterAcquire",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MergeIterator$ManyToOne.consume",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2",
                "datacenter^2"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnIndex.buildRowIndex",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIterators$UnfilteredRowMergeIterator.mergeStaticRows",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Row$Merger.merge",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "super-linear": [
                "keyspace^2"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTableRewriter.maybeReopenEarly",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getPrimaryRangesForEndpoint",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MergeIterator.close",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionIterator$1.getRowMergeListener",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Serializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "datacenter"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Slices$Builder.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.UnfilteredPartitionIterators$1.onKeyChange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.mostInterestingBucket",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "node",
                "token",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cache.ChunkCache$CachingRebufferer.rebuffer",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.util.BufferedDataOutputStreamPlus.writeBoolean",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIterators$UnfilteredRowMergeIterator.mergeStats",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableWriter.afterAppend",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.RowIterators.digest",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Slice.extractValues",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.SortedBiMultiValMap.create",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token"
            ],
            "bursty": [
                "Burst(node)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableWriter.beforeAppend",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "0.0922keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.RowIndexEntry.create",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy.createSSTableAndLengthPairs",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token"
            ],
            "bursty": [
                "Burst(node)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.MergeIterator$ManyToOne.advance",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "super-linear": [
                "keyspace^2",
                "table^3",
                "table^2",
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.filter.ClusteringIndexNamesFilter.getSlices",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.AbstractClusteringPrefix.digest",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.isRowCacheEnabled",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter"
            ],
            "super-linear": [
                "keyspace^2"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(node, token)",
                "Burst(datacenter, token)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.UnfilteredPartitionIterators$1.getReduced",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.UnfilteredPartitionIterators$Serializer$1.hasNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTableRewriter.append",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.BloomFilter.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "supra-linear": [
                "log(token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIterators$UnfilteredRowMergeIterator.collectPartitionLevelDeletion",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ReadExecutionController.close",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Columns.digest",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.processPartition",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.TableMetrics$TableHistogram.update",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIterators$UnfilteredRowMergeIterator.checkForInvalidInput",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnIndex.finish",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "0.0918keyspace",
                "log(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.columniterator.SSTableIterator$ForwardReader.handlePreSliceData",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.metadata.MetadataCollector.updateClusteringValues",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy$RangeCommandIterator.computeNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPExecutor.takeWorkPermit",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^3",
                "datacenter * token^2",
                "datacenter^2 * token"
            ],
            "large-linear": [
                "14004keyspace"
            ],
            "bursty": [
                "Burst(node, token)"
            ],
            "supra-linear": [
                "0.0784row",
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.FastByteOperations$UnsafeOperations.copy",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^3",
                "table^2",
                "token^2"
            ],
            "large-linear": [
                "306keyspace"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.TreeCursor.moveOne",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^3",
                "token^2",
                "datacenter^2",
                "table^2"
            ],
            "large-linear": [
                "123keyspace",
                "462table"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "linear": [
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.AbstractType.writeValue",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^3",
                "keyspace^2",
                "table^3",
                "datacenter * token"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.RebufferingInputStream.read",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^3",
                "table^2",
                "token^2"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "large-linear": [
                "289table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.selfAssign",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^3",
                "token^3",
                "datacenter^2 * token",
                "table^3",
                "token^2"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.FastByteOperations$UnsafeOperations.compareTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "datacenter * token",
                "table^2",
                "token^2"
            ],
            "linear": [
                "token"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2"
            ],
            "linear": [
                "keyspace",
                "row",
                "table",
                "token"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.selection.Selection$ResultSetBuilder.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "keyspace^3",
                "table^2"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.columniterator.SSTableIterator$ForwardReader.hasNextInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^2",
                "datacenter * token"
            ],
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.treeIndexOfKey",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "linear": [
                "row"
            ],
            "quasi-linear": [
                "table * log(table)",
                "datacenter * token * log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow$Builder.addCell",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "node^2 * token",
                "table^2"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "row",
                "token",
                "datacenter"
            ],
            "large-linear": [
                "293table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTreeSearchIterator.next",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "token^2"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "large-linear": [
                "183keyspace"
            ],
            "linear": [
                "row"
            ],
            "supra-linear": [
                "log(datacenter)",
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.MessageDeliveryTask.run",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)"
            ],
            "linear": [
                "token"
            ],
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow.unsharedHeapSizeExcludingData",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(node * token)",
                "log(row)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "token",
                "table"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.TreeBuilder.update",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(node * token)",
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "keyspace",
                "table",
                "token"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.calculatePendingRanges",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.AbstractCompactionStrategy.worthDroppingTombstones",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(node * token)",
                "log(row)",
                "log(datacenter * token)",
                "log(table)"
            ],
            "linear": [
                "keyspace",
                "table"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.clear",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(row)"
            ],
            "linear": [
                "token"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.notifyFailureDetector",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(datacenter)"
            ],
            "super-linear": [
                "node^2",
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.applyStateLocally",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(datacenter)"
            ],
            "super-linear": [
                "node^2",
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.ensureParent",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node)",
                "log(row)"
            ],
            "bursty": [
                "Burst(node, token)"
            ],
            "linear": [
                "datacenter",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.ArrayBackedBoundedStats.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "node * token",
                "datacenter^2"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.getPrimaryRangesFor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "token^2",
                "datacenter^3"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.ExecutorLocals.set",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "node^2",
                "datacenter^2",
                "datacenter * token"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(node)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.sizeOfStructureOnHeap",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)",
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "token",
                "row"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cells.reconcile",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "linear": [
                "keyspace",
                "token",
                "table"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAck2VerbHandler.doVerb",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "node^2",
                "datacenter^2"
            ],
            "supra-linear": [
                "log(datacenter)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundTcpConnectionPool.waitForStarted",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "supra-linear": [
                "log(node)",
                "log(datacenter)"
            ],
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSynVerbHandler.doSort",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "node^2",
                "datacenter^2"
            ],
            "supra-linear": [
                "log(datacenter)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.examineGossiper",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "node^2",
                "datacenter^2"
            ],
            "supra-linear": [
                "log(datacenter)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.EndpointStateSerializer.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "linear": [
                "token"
            ],
            "supra-linear": [
                "log(datacenter)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSynVerbHandler.doVerb",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "node^2",
                "datacenter^2"
            ],
            "supra-linear": [
                "log(datacenter)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.getMaxEndpointStateVersion",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)",
                "keyspace * log(keyspace)",
                "node * token * log(node * token)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "super-linear": [
                "token^2"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.MessagingService.sendOneWay",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "node^2"
            ],
            "supra-linear": [
                "log(datacenter)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.EndpointStateSerializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "node * log(node)"
            ],
            "super-linear": [
                "node * token"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.applyNewStates",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.onChange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token",
                "datacenter"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.FailureDetector.interpret",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.ArrivalWindow.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.getStateForVersionBiggerThan",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "super-linear": [
                "token^2",
                "datacenter * token",
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.copyKeys",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.isRoot",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow.dataSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token"
            ],
            "supra-linear": [
                "log(node * token)",
                "log(row)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.doOnChangeNotifications",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node",
                "token",
                "datacenter"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.AtomicBTreePartition$RowUpdater.builder",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "node"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir.rescale",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(node, token)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.SSTableIntervalTree.buildIntervals",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.BiMultiValMap.putAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.commitlog.CommitLogSegment.markDirty",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "table",
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Memtable$ColumnsCollector.update",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)",
                "Burst(node, token)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.view.ViewManager.updatesAffectView",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.OpOrder$Group.unlink",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)",
                "Burst(node, token)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.Refs.tryRef",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow$Builder$CellResolver.resolve",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "super-linear": [
                "table^2"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.BiMultiValMap.removeValue",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.updateNormalTokens",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.AbstractReplicationStrategy.getAddressRanges",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(row)"
            ],
            "linear": [
                "keyspace",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.removeFromMoving",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.LatencyMetrics.addNano",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(node, token)",
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "super-linear": [
                "keyspace^2",
                "datacenter^2"
            ],
            "linear": [
                "keyspace",
                "row"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Rows.copy",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(keyspace)",
                "Burst(node, token)",
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.SlabAllocator.getRegion",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "super-linear": [
                "keyspace^2",
                "datacenter * token"
            ],
            "linear": [
                "token",
                "table"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.PartitionColumns.mergeTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(table)"
            ],
            "linear": [
                "keyspace",
                "token"
            ],
            "supra-linear": [
                "log(node * token)",
                "log(row)",
                "log(token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.finish",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(row)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(node * token)"
            ],
            "linear": [
                "datacenter",
                "token"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus.writeUTF",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(node, token)"
            ],
            "linear": [
                "token"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.removeEndpoints",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.ensureRoom",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(node * token)",
                "log(row)"
            ],
            "super-linear": [
                "datacenter^2"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.ContextAllocator.clone",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node)",
                "datacenter * token",
                "Burst(table)"
            ],
            "linear": [
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "super-linear": [
                "table^2",
                "datacenter * token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.EndpointState.addApplicationStates",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "large-linear": [
                "116node"
            ],
            "super-linear": [
                "token^2",
                "datacenter * token"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.estimatedKeysForRanges",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStoreCQLHelper.getUserTypesAsCQL",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.Int32Type.compareCustom",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.selection.Selection.containsOnlyStaticColumns",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.config.Schema.getCFMetaData",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStoreCQLHelper.getPartitionColumns",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStoreCQLHelper.toCQL",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.snapshot",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStoreCQLHelper.getCFMetadataAsCQL",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RangeTombstoneList.clone",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.executeInternalWithoutCondition",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(row)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PartitionUpdate.operationCount",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RangeTombstoneList.forwardIterator",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.snapshotExists",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.dht.Range.normalize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.forceFlush",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStoreCQLHelper.getDroppedColumnsAsCQL",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.StatementRestrictions.processPartitionKeyRestrictions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.process",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Directories.getWriteableLocation",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.index.SecondaryIndexManager.validate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)",
                "log(token)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.snapshotWithoutFlush",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.writeSnapshotSchema",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.ClientState.getTimestamp",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "supra-linear": [
                "log(token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.orIn",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "datacenter"
            ],
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.getMeanColumns",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.selectAndReference",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStoreCQLHelper.getIndexesAsCQL",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Slice.make",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.addFunctionsTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.readRequiredLists",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(row)",
                "log(token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStoreCQLHelper.getClusteringColumns",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager.submitBackground",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Directories.snapshotExists",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.serializedMarkerBodySize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.ObjectSizes.sizeOnHeapOf",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.RestorableMeter.tickIfNecessary",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "datacenter"
            ],
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$LocalPool.put",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(table)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.writeComplexColumn",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.readComplexColumn",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$LocalPool.get",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(row)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.RangeTombstoneList.collectStats",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.CompositeType.build",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter"
            ],
            "bursty": [
                "Burst(row)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.recordSizeEstimates",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.UpdatesCollector.toMutations",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.config.CFMetaData.nonPkColumnIterator",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.dht.Range.deoverlap",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.checkAccess",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SystemKeyspace.updateSizeEstimates",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$Chunk.free",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(table)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.RangeTombstoneList.addInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ],
            "bursty": [
                "Burst(node, token)",
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.getSampleIndexesForRanges",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RangeTombstoneList.copy",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.FailureDetector.isAlive",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.PartitionColumns$Builder.addAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir$EstimatedHistogramReservoirSnapshot.count",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)",
                "Burst(table)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.requiresRead",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(row)",
                "log(token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Message$Dispatcher.channelRead0",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "supra-linear": [
                "0.0718keyspace",
                "log(row)",
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.MessagingService.addLatency",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.RestrictionSet.hasContains",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Row$Merger$ColumnDataReducer.getReduced",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.DataOutputBuffer.checkedArraySizeCast",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node, token)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(row)",
                "log(token)",
                "log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.WrappedSharedCloseable$Tidy.tidy",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.RowIndexEntry$Serializer.skipPromotedIndex",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)",
                "Burst(table)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorWithLowerBound.getPartitionIndexLowerBound",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.selectStatement",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "0.0546table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow$Builder.build",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "0.0414table",
                "log(table)"
            ],
            "linear": [
                "token"
            ],
            "super-linear": [
                "table^2",
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.identityMap",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)",
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.QueryProcessor.makeInternalOptions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "linear": [
                "table",
                "token"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader.markObsolete",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Lexer.mWS",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "super-linear": [
                "keyspace^2"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.ClusteringColumnRestrictions.boundsAsClustering",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Helpers.replace",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool.get",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.UnfilteredPartitionIterators$Serializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTable.bytesOnDisk",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.buildPartitionKeyNames",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(row)",
                "log(token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier.tidy",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.util.BufferedDataOutputStreamPlus.write",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(datacenter, token)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "row"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.commitlog.IntervalSet$Builder.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.metrics.DecayingEstimatedHistogramReservoir$EstimatedHistogramReservoirSnapshot.getValue",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)",
                "Burst(table)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.addUpdates",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorWithLowerBound.getMetadataLowerBound",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.PartitionKeySingleRestrictionSet.values",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.SingleColumnRelation.toReceivers",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "super-linear": [
                "keyspace^2"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Lexer.mSTRING_LITERAL",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.filter.RowFilter$CQLFilter.filter",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "linear": [
                "keyspace",
                "token"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.ReadCallback.awaitResults",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.applyReverse",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getCompactionStrategyIndex",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.toArray",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.buildFromRange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "token",
                "datacenter"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.monitoring.MonitoringTask$OperationsQueue.popOperations",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.Tracker.notifyDeleting",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow.create",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.resolve",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)",
                "Burst(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "table"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.AbstractType.writtenLength",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(row)",
                "Burst(table)"
            ],
            "super-linear": [
                "token^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.dht.Range.sort",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.estimatePartitionsCount",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "table"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.estimateMeanPartitionSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "table"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SimpleBuilders$RowBuilder.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.config.ColumnDefinition$Raw$Literal.prepare",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PartitionUpdate.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.View.sstablesInBounds",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "table"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ReadCommand$CheckForAbort.applyToRow",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "table"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "super-linear": [
                "table^2",
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Columns$Serializer.encodeBitmap",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.AsymmetricOrdering.binarySearchAsymmetric",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "keyspace",
                "table",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.prepare",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "table^2",
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Directories.getLocationForDisk",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Directories.getOrCreate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.ClusteringColumnRestrictions.hasMultiColumnSlice",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeCursor.seekInNode",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.RestrictionSet.hasSupportingIndex",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.concurrent.SEPWorker.assign",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "bursty": [
                "Burst(node, token)",
                "Burst(table)"
            ],
            "linear": [
                "table",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.constant",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.UnfilteredDeserializer$CurrentDeserializer.compareNextTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^2",
                "datacenter^2"
            ],
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Serializer.makeHeader",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "datacenter * token"
            ],
            "supra-linear": [
                "0.0947keyspace"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ReadCommand$1MetricRecording.applyToRow",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^3",
                "table^2",
                "datacenter * token"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BaseRows.hasNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "bursty": [
                "Burst(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.StreamingHistogram$StreamingHistogramBuilder.update",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2"
            ],
            "bursty": [
                "Burst(table)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SimpleBuilders$RowBuilder.getColumn",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Serializer.serializeValuesWithoutSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.MutableDeletionInfo.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$Chunk.get",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.Message$ProtocolDecoder.decode",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Columns$Serializer.deserializeSubset",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.sortByProximityWithBadness",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cache.ChunkCache.load",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.util.CompressedChunkReader$Mmap.readChunk",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ConsistencyLevel.assureSufficientLiveNodes",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ConsistencyLevel.filterForQuery",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "0.0378table"
            ],
            "linear": [
                "keyspace"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.gatherQueriedColumns",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.ClientState.hasAccess",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.UpdateParameters.newRow",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.Message$ProtocolEncoder.encode",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Serializers.indexInfoSerializer",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "keyspace",
                "table",
                "datacenter"
            ],
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.mergeAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "table",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.selection.Selection.containsAComplexColumn",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.CqlParser.query",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.Accumulator.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageProxy$RangeMerger.computeNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.RestrictionSet.mergeRestrictions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "super-linear": [
                "keyspace^2"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.ClusteringColumnRestrictions.needFiltering",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.autoEnforce",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "bursty": [
                "Burst(keyspace)",
                "Burst(node, token)"
            ],
            "linear": [
                "table",
                "token"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet$ResultMetadata$Codec.encodedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.ReadCallback.response",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.ReadCallback.get",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionController.getPurgeEvaluator",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(token)"
            ],
            "bursty": [
                "Burst(row)",
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement$RawStatement.prepare",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.PartitionKeySingleRestrictionSet.toByteBuffers",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0544keyspace",
                "log(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.Frame$Header$Flag.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "0.0351keyspace",
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.SerializationHelper.isDropped",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "large-linear": [
                "312keyspace",
                "429table"
            ],
            "super-linear": [
                "keyspace^2",
                "table^2",
                "token^2"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Serializer.deserializeValuesWithoutSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "supra-linear": [
                "0.0296table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.applyForwards",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^2",
                "datacenter * token"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.filter.DataLimits$CQLLimits$CQLCounter.incrementRowCount",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2",
                "table^2"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.StatementRestrictions.processClusteringColumnsRestrictions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.VariableSpecifications.getPartitionKeyBindIndexes",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "keyspace^2"
            ],
            "linear": [
                "row",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.getQuery",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.PartitionColumns$Builder.build",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)"
            ],
            "linear": [
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.FBUtilities.waitOnFutures",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "0.0837table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.DynamicEndpointSnitch.sortByProximity",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.EstimatedHistogram.count",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ],
            "bursty": [
                "Burst(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getLiveNaturalEndpoints",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.CollectionSerializer.pack",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.PartitionKeySingleRestrictionSet.hasSlice",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(keyspace)",
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SimpleBuilders.makeClustering",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.findIndex",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "linear": [
                "table"
            ],
            "large-linear": [
                "102table"
            ],
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.TimeUUIDType.compareCustom",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow.lambda$filter$3",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(row)",
                "log(token)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.doStatusCheck",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.makeRandomGossipDigest",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Rows.merge",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "token",
                "datacenter"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.AbstractBTreePartition.staticRow",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table",
                "token"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.update",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "linear": [
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.RestrictionSet.hasRestrictionFor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "bursty": [
                "Burst(row)",
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.SimpleCondition.await",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.maybeGossipToSeed",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper$GossipTask.run",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.BloomFilter.setIndexes",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)",
                "table * log(table)"
            ],
            "supra-linear": [
                "log(row)",
                "log(datacenter * token)"
            ],
            "linear": [
                "table"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.deserializeOne",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "keyspace * log(keyspace)"
            ],
            "super-linear": [
                "table^2",
                "datacenter * token"
            ],
            "large-linear": [
                "154table"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.EstimatedHistogram$EstimatedHistogramSerializer.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.View.liveSSTablesInBounds",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.BufferedDataOutputStreamPlus.doFlush",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-cross",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.transformAndFilter",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.lambda$serializeRowBody$0",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)",
                "Burst(node, token)"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "super-linear": [
                "datacenter * token",
                "table^2",
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.ColumnSpecification.allInSameTable",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree.findByIndex",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table",
                "datacenter"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.selection.SelectionColumnMapping.simpleMapping",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.util.SequentialWriter$TransactionalProxy.doPreCleanup",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(keyspace)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.StatementRestrictions.isColumnRange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "token"
            ],
            "bursty": [
                "Burst(node, token)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager$1.call",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Keyspace.getValidColumnFamilies",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ReadExecutionController.forCommand",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ],
            "bursty": [
                "Burst(node, token)",
                "Burst(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RangeTombstoneList.insertFrom",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager.isCompacting",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.runWithCompactionsDisabled",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager.interruptCompactionForCFs",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager.waitForCessation",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Slice.isEmpty",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.selection.Selection$ResultSetBuilder.build",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager.submitMaximal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionManager.interruptCompactionFor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.RangeTombstoneList.addAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace",
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.forceKeyspaceCompaction",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.AbstractAllocator.clone",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "keyspace"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "large-linear": [
                "544keyspace"
            ],
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "super-linear": [
                "table^2",
                "token^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.ClusteringColumnRestrictions.valuesAsClustering",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(node * token)",
                "log(row)",
                "log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "linear": [
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.NodeBuilder.ascendToRoot",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.RestrictionSet.hasOnlyEqualityRestrictions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)",
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.config.CFMetaData.serializePartitionKey",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)",
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "super-linear": [
                "table^2",
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.RestrictionSet.hasIN",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "super-linear": [
                "table^2"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.TreeBuilder.build",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.StatementRestrictions.getRowFilter",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)",
                "Burst(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.getDataLimits",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(node, token)",
                "Burst(datacenter, token)"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "super-linear": [
                "table^2"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.AbstractClusteringPrefix.dataSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.CellPath.dataSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ],
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.functions.FunctionCall.bindAndGet",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.pager.PartitionRangeQueryPager.nextPageReadCommand",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet.trim",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "linear": [
                "table",
                "token"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.addLocalApplicationStates",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.QueryProcessor.lambda$static$2",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore$2.run",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.LeveledManifest.getEstimatedTasks",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.commitlog.CommitLogSegmentManagerStandard.allocate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table",
                "token"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager$ReplayingBatch.sendSingleReplayMutation",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Lexer.mINTEGER",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.MessagingService.getDroppedMessagesLogs",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.functions.TokenFct.execute",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.UntypedResultSet$FromPager$1.computeNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager.processBatchlogEntries",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement$Parsed.prepareConditions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.CBUtil.sizeOfStringToStringListMap",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PartitionUpdate$PartitionUpdateSerializer.deserialize30",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.MessagingService.logDroppedMessages",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.validate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.ClientState.preventSystemKSSchemaModification",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.CBUtil.readValueList",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager$ReplayingBatch.addMutation",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Memtable.accepts",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "bursty": [
                "Burst(datacenter, token)",
                "Burst(table)"
            ],
            "linear": [
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Memtable.makePartitionIterator",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.ProtocolVersion.supportedVersions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.LeveledCompactionStrategy.findDroppableSSTable",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Columns$Serializer.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.CBUtil.sizeOfStringList",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$MutationSerializer.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.GCInspector.handleNotification",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.ClusteringColumnRestrictions.hasSlice",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Attributes$Raw.prepare",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ColumnFamilyStore.getMeanPartitionSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.LeveledCompactionStrategy.getNextBackgroundTask",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.RestrictionSet.getRestrictions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.CBUtil.writeStringList",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.UUIDGen.createTimeUUIDBytes",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.UpdateStatement$ParsedInsert.prepareInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.normalInsertStatement",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.btree.BTree$Builder.addAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.batchlog.BatchlogManager.finishAndClearBatches",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.UpdateStatement.addUpdateForKey",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.StatementRestrictions.getPartitionKeyBoundsForTokenRestrictions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Attributes.collectMarkerSpecification",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PartitionUpdate.dataSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.addLocalApplicationStateInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.ExpiringMap$1.run",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.CassandraVersion.toString",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.CBUtil.writeStringToStringListMap",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.Attributes.addFunctionsTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.UnfilteredPartitionIterators.mergeLazily",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table",
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ReadCommand$1MetricRecording.onClose",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)",
                "log(table)"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "super-linear": [
                "table^2"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation.smallestGCGS",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.doBeforeChangeNotifications",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.ModificationStatement.checkAccess",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.insertStatement",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.triggers.TriggerExecutor.executeInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.LeveledManifest.getCompactionCandidates",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.LeveledManifest.getLevelCount",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.transform.BasePartitions.runOnClose",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "linear": [
                "table",
                "token"
            ],
            "bursty": [
                "Burst(table)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ReadCommand.executeLocally",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(row)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$Chunk.tryRecycle",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.DeleteStatement.addUpdateForKey",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.SSTable.discoverComponentsFor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.cloneAfterAllSettled",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier$1.run",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.UpdatesCollector.validateIndexedColumns",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.EstimatedHistogram.rawMean",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.getDiskBoundaries",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)",
                "Burst(table)",
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.memory.BufferPool$LocalPool.addChunk",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.commitlog.IntervalSet$Builder.addAll",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(row)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Constants$Literal.parsedValue",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "row"
            ],
            "supra-linear": [
                "log(table)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.skipNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.UnfilteredDeserializer$CurrentDeserializer.nextIsRow",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringPrefix$Deserializer.hasComponent",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "table^2"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableReader.getPosition",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "table"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SinglePartitionReadCommand.reduceFilter",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.getSliceCommands",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "table",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.ByteBufferUtil.clone",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SinglePartitionReadCommand.queryMemtableAndDiskInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.filter.ClusteringIndexNamesFilter.shouldInclude",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "table"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.BloomFilter.isPresent",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "table"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.makeSlices",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Slice.intersects",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "table"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Slices.with",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.DataType.fromType",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.CompactionStrategyManager.getEstimatedRemainingTasks",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.ResultSet$Codec.encode",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringComparator.make",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ],
            "quasi-linear": [
                "table * log(table)"
            ],
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SinglePartitionReadCommand.queriesMulticellType",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table",
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.MapType.getInstance",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.CompactionParams.create",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.config.CFMetaData.extractTypes",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.CompressionParams.createCompressor",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SinglePartitionReadCommand.canRemoveRow",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.config.CFMetaData.rebuild",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.AbstractBTreePartition.build",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table",
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategyOptions.validateOptions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.CompressionParams.copyOptions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SinglePartitionReadCommand.queryMemtableAndSSTablesInTimestampOrder",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SinglePartitionReadCommand$Group.executeLocally",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table",
                "datacenter"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.serializers.SetSerializer.deserializeForNativeProtocol",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.schema.CachingParams.fromMap",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.SinglePartitionReadCommand.add",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.EmptyIterators.unfilteredRow",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement.executeInternal",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table",
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Slices$ArrayBackedSlices.intersects",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaKeyspace.fetchDroppedColumns",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.CompactionParams.classFromName",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.config.CFMetaData.create",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.config.ColumnDefinition.comparisonOrder",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.AbstractCompactionStrategy.validateOptions",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.CompressionParams.validate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.SetType.getInstance",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.serializers.MapSerializer.deserializeForNativeProtocol",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.ClusteringBound.compareTo",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table",
                "datacenter"
            ],
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.BTreeRow.minDeletionTime",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ],
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.RangeTombstoneList$3.computeNext",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.statements.SelectStatement$RawStatement.getAggregationSpecification",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)",
                "0.0816table"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.selectClause",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ],
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.RangeTombstoneMarker$Merger.merge",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.partitions.PurgeFunction.lambda$new$0",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ],
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.PartitionKeySingleRestrictionSet.bounds",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.LifecycleTransaction.obsolete",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.LeveledManifest.getAllSSTables",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "table"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.filter.RowFilter.hasExpressionOnClusteringOrRegularColumns",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "quasi-linear": [
                "table * log(table)"
            ],
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.concurrent.Transactional$AbstractTransactional.commit",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.transport.messages.QueryMessage.execute",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.utils.EstimatedHistogram.percentile",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.relationOrExpression",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.cql3.restrictions.StatementRestrictions.needFiltering",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.cql3.Cql_Parser.relation",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(table)"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredSerializer.serializedRowBodySize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestAckVerbHandler.doVerb",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.GossipDigestSerializationHelper.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.MessageOut.serialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "datacenter * token"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.Cell$Serializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "super-linear": [
                "token^2"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.lifecycle.View$3.apply",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.dht.Splitter.splitOwnedRanges",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync",
            "unbound-allocation",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.MessageIn.readConstructionTime",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.compaction.AbstractCompactionStrategy.addSSTables",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "bursty": [
                "Burst(datacenter, token)"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundTcpConnection.writeConnected",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(datacenter * token)"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.marshal.AbstractCompositeType.validate",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "supra-linear": [
                "log(token)"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.removeEndpoint",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.MigrationManager$MigrationsSerializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.updateHostId",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.locator.TokenMetadata.addBootstrapTokens",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.SizeEstimatesRecorder.run",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.net.ResponseVerbHandler.doVerb",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaKeyspace.convertSchemaToMutations",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.realMarkAlive",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.PendingRangeCalculatorService$PendingRangeTask.run",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundTcpConnectionPool.reset",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.onJoin",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.OutboundTcpConnectionPool.close",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.utils.ExpiringMap.put",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.transport.Server$EventNotifier.onStatusChange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.net.MessagingService.addCallback",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-app"
        ]
    },
    {
        "methodName": "org.apache.cassandra.gms.TokenSerializer.deserialize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross",
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.MigrationManager.maybeScheduleSchemaPull",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.handleMajorStateChange",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.io.sstable.format.big.BigTableScanner.seekToCurrentRangeStart",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-cross"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.handleStateBootstrap",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.service.StorageService.notifyDown",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.markDead",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.gms.Gossiper.sendGossip",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "datacenter"
            ]
        },
        "antiPatterns": [
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.metrics.DefaultNameFactory.createDefaultMBeanName",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.Mutation$MutationSerializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.db.Columns$Serializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    },
    {
        "methodName": "org.apache.cassandra.schema.SchemaKeyspace.makeUpdateForSchema",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "unbound-collection"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.filter.ColumnFilter$Builder.build",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": [
            "compute-app",
            "compute-sync"
        ]
    },
    {
        "methodName": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer.serializedSize",
        "lineNumber": 0,
        "dependencyType": "Cross",
        "dimensionDescriptors": {
            "linear": [
                "token"
            ]
        },
        "antiPatterns": []
    }
]